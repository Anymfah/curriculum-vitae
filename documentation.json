{
    "pipes": [],
    "interfaces": [
        {
            "name": "DrawCircleCoordinates",
            "id": "interface-DrawCircleCoordinates-0aa8e69dc843091cfd9ae4618641129dd9cf39c6723f3d763337c15ebc26882fc6bbbbe5465502de914cb9e609400f40e3aa8b4db0464c44d8b0361c064d60b1",
            "file": "src/app/modules/shared/draw-circle/draw-circle.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DrawCircleCoordinates {\n  x: number;\n  y: number;\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MenuItem",
            "id": "interface-MenuItem-8bf66f0501ede8df9df726ff1aad7a370c45bf8b8e8e84aa285fa2f768c0cded10adfd8b5f4715aa0eb0d672bab540351cac3d9b31070150acd96248cc6d0d98",
            "file": "src/app/modules/main/components/menu/menu.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\n  label: string;\n  link: string;\n  index: number;\n  active?: boolean;\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PageService",
            "id": "injectable-PageService-b77c3e3ae42789fc1398e1a53f24aa151b773cfaa4f79f590214f2dabbf927a71df64ac90871b1ae1e814bc08ea15ccbda8871b4c2984c428d72edd71a00ce98",
            "file": "src/app/services/page.service.ts",
            "properties": [
                {
                    "name": "_pageDirection",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The page direction</p>\n",
                    "line": 23,
                    "rawdescription": "\n\nThe page direction\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pagePanel",
                    "defaultValue": "new BehaviorSubject<MatTabNavPanel | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The tab panel to show the pages as BehaviorSubject.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nThe tab panel to show the pages as BehaviorSubject.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pageDirection$",
                    "defaultValue": "this._pageDirection.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The page direction as Observable.</p>\n",
                    "line": 28,
                    "rawdescription": "\n\nThe page direction as Observable.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pagePanel$",
                    "defaultValue": "this._pagePanel.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The tab panel to show the pages as Observable.</p>\n",
                    "line": 18,
                    "rawdescription": "\n\nThe tab panel to show the pages as Observable.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setPageDirection",
                    "args": [
                        {
                            "name": "pageDirection",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the page direction.\n",
                    "description": "<p>Sets the page direction.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 941,
                                "end": 954,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "pageDirection"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 935,
                                "end": 940,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>true = the clicked item is after the current item.</p>\n"
                        }
                    ]
                },
                {
                    "name": "setPagePanel",
                    "args": [
                        {
                            "name": "pagePanel",
                            "type": "MatTabNavPanel | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the tab panel to show the pages.\n",
                    "description": "<p>Sets the tab panel to show the pages.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 771,
                                "end": 780,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "pagePanel"
                            },
                            "type": "MatTabNavPanel | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 765,
                                "end": 770,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {MatTabNavPanel} from \"@angular/material/tabs\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageService {\n\n  /**\n   * The tab panel to show the pages as BehaviorSubject.\n   */\n  private _pagePanel = new BehaviorSubject<MatTabNavPanel | null>(null);\n\n  /**\n   * The tab panel to show the pages as Observable.\n   */\n  public pagePanel$ = this._pagePanel.asObservable();\n\n  /**\n   * The page direction\n   */\n  private _pageDirection = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The page direction as Observable.\n   */\n  public pageDirection$ = this._pageDirection.asObservable();\n\n\n  public constructor() { }\n\n  /**\n   * Sets the tab panel to show the pages.\n   * @param pagePanel\n   */\n  public setPagePanel(pagePanel: MatTabNavPanel | null): void {\n    this._pagePanel.next(pagePanel);\n  }\n\n  /**\n   * Sets the page direction.\n   * @param pageDirection true = the clicked item is after the current item.\n   */\n  public setPageDirection(pageDirection: boolean): void {\n    this._pageDirection.next(pageDirection);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 28,
                "modifierKind": [
                    123
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-99123493909ec051af4c5b257e26d80d5859a0ea90161d0176a8fa0b01c7c8353b14fa5bb7ce587e2897be37d06d0aee3399f608eea7571861a10c68a96bc6f9",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'curriculum-vitae'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public title = 'curriculum-vitae';\n  constructor() {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<cv-layout></cv-layout>\n\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a345a94f1bed4c05f4c138f06a6de44cdfce7aab57aa10a9e8d22521caef5a02d0974db1178f6e24fb343cd502f87d4d8ce6ea008d1ddef32e3ce419c47e29de",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary.scss' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CircleComponent",
            "id": "component-CircleComponent-b0145e199469ae8f70bf54e222b45b3481f73df02399964434f2dca52269c0fb436645bdee41babe2d6427fd0543a2a088194b37eaff2664ddffb97f53d694b3",
            "file": "src/app/modules/shared/circle/circle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-circle",
            "styleUrls": [
                "./circle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./circle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fillPercentage",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1015,
                            "end": 1183,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1016,
                                "end": 1027,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "description"
                            },
                            "comment": "<p>0% is the top of the circle.\nYou can change the start point with the [startAt] input.\nYou can reverse the direction with the [reverse] input.</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nFill percentage of the track bar.\nYou can change the start point with the [startAt] input.\nYou can reverse the direction with the [reverse] input.\n",
                    "description": "<p>Fill percentage of the track bar.\nYou can change the start point with the [startAt] input.\nYou can reverse the direction with the [reverse] input.</p>\n",
                    "line": 40,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "reverse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReversed direction of the track bar.\n",
                    "description": "<p>Reversed direction of the track bar.</p>\n",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle.\n",
                    "description": "<p>Size of the circle.</p>\n",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "startAt",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1281,
                            "end": 1345,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1282,
                                "end": 1293,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "description"
                            },
                            "comment": "<p>0% is the top of the circle and 50% the bottom.</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nStart point of the track bar.\n",
                    "description": "<p>Start point of the track bar.</p>\n",
                    "line": 46,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight of the circle line.\n",
                    "description": "<p>Weight of the circle line.</p>\n",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "trackBarMask",
                    "defaultValue": "`radial-gradient(circle at center, transparent 0, transparent 98px, black 98px)`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>track bar mask for the circle.\nSee _drawSize()</p>\n",
                    "line": 57,
                    "rawdescription": "\n\ntrack bar mask for the circle.\nSee _drawSize()\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1525,
                            "end": 1545,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 344,
                            "tagName": {
                                "pos": 1526,
                                "end": 1529,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "see"
                            },
                            "comment": "<p>()</p>\n",
                            "name": {
                                "pos": 1530,
                                "end": 1539,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 308,
                                "name": {
                                    "pos": 1530,
                                    "end": 1539,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "_drawSize"
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "trackBarMaskInner",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>track bar fill for the circle.\nSee _drawTrackCircle()</p>\n",
                    "line": 63,
                    "rawdescription": "\n\ntrack bar fill for the circle.\nSee _drawTrackCircle()\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1702,
                            "end": 1729,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 344,
                            "tagName": {
                                "pos": 1703,
                                "end": 1706,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "see"
                            },
                            "comment": "<p>()</p>\n",
                            "name": {
                                "pos": 1707,
                                "end": 1723,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 308,
                                "name": {
                                    "pos": 1707,
                                    "end": 1723,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "_drawTrackCircle"
                                }
                            }
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_drawSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDraw the size of the circle.\n",
                    "description": "<p>Draw the size of the circle.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "_drawTrackCircle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDraw the inner track bar.\n",
                    "description": "<p>Draw the inner track bar.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Circle Component\nThe circle can be displayed in different sizes, also it can be filled with a percentage.</p>\n<ul>\n<li>You can change color of the track circle from css by\noverriding the --track-bar-color variable.</li>\n<li>You can change color of the track bar from css by\noverriding the --track-bar-bg-color variable.</li>\n</ul>\n<div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;cv-circle [size]=&quot;200&quot; [weight]=&quot;10&quot;&gt;&lt;/cv-circle&gt;</code></pre></div>",
            "rawdescription": "\n\nCircle Component\nThe circle can be displayed in different sizes, also it can be filled with a percentage.\n\n   - You can change color of the track circle from css by\n     overriding the --track-bar-color variable.\n   - You can change color of the track bar from css by\n     overriding the --track-bar-bg-color variable.\n```html\n<cv-circle [size]=\"200\" [weight]=\"10\"></cv-circle>\n```",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\n/**\n * @author Soheil Saheb-Jamii\n * @since 2022-12-25\n * Circle Component\n * @description This component is used to display a circle.\n * The circle can be displayed in different sizes, also it can be filled with a percentage.\n *\n * @exception\n *    - You can change color of the track circle from css by\n *      overriding the --track-bar-color variable.\n *    - You can change color of the track bar from css by\n *      overriding the --track-bar-bg-color variable.\n * @example\n * <cv-circle [size]=\"200\" [weight]=\"10\"></cv-circle>\n */\n@Component({\n  selector: 'cv-circle',\n  templateUrl: './circle.component.html',\n  styleUrls: ['./circle.component.scss']\n})\nexport class CircleComponent implements OnChanges, OnInit {\n\n  /**\n   * Size of the circle.\n   */\n  @Input() public size: number = 200;\n\n  /**\n   * Weight of the circle line.\n   */\n  @Input() public weight: number = 10;\n\n  /**\n   * Fill percentage of the track bar.\n   * @description 0% is the top of the circle.\n   * You can change the start point with the [startAt] input.\n   * You can reverse the direction with the [reverse] input.\n   */\n  @Input() public fillPercentage: number = 100;\n\n  /**\n   * Start point of the track bar.\n   * @description 0% is the top of the circle and 50% the bottom.\n   */\n  @Input() public startAt: number = 0;\n\n  /**\n   * Reversed direction of the track bar.\n   */\n  @Input() public reverse = false;\n\n  /**\n   * track bar mask for the circle.\n   * @see _drawSize()\n   */\n  public trackBarMask = `radial-gradient(circle at center, transparent 0, transparent 98px, black 98px)`;\n\n  /**\n   * track bar fill for the circle.\n   * @see _drawTrackCircle()\n   */\n  public trackBarMaskInner = '';\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    if ('fillPercentage' in changes\n      || 'startAt' in changes\n      || 'reverse' in changes) {\n      this._drawTrackCircle();\n    }\n\n    if ('size' in changes\n      || 'weight' in changes) {\n      this._drawSize();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit() {\n    this._drawSize();\n    this._drawTrackCircle();\n  }\n\n  /**\n   * @event ngOnChanges\n   * @event ngOnInit\n   * Draw the inner track bar.\n   */\n  private _drawTrackCircle() {\n    if (!this.reverse) {\n      const startAtDegree = this.startAt * 3.6;\n      this.trackBarMaskInner = `conic-gradient(\n        from ${startAtDegree}deg,\n        black ${this.fillPercentage}%,\n        transparent ${this.fillPercentage}%\n        )`;\n    } else {\n      // Reverse the direction (will start with empty to filled)\n      const emptyPercentage = 100 - this.fillPercentage;\n      const startPercentage = 100 - this.startAt;\n      const startAtDegree = startPercentage * 3.6;\n      this.trackBarMaskInner = `conic-gradient(\n        from ${startAtDegree}deg,\n        transparent ${emptyPercentage}%,\n        black ${emptyPercentage}%\n        )`;\n    }\n  }\n\n  /**\n   * @event ngOnChanges\n   * @event ngOnInit\n   * Draw the size of the circle.\n   */\n  private _drawSize() {\n    const radius = this.size / 2;\n    this.trackBarMask = `radial-gradient(circle at center, transparent 0, transparent ${radius - this.weight}px, black ${radius - this.weight}px)`;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'mixins';\r\n\r\n:host {\r\n  .circle {\r\n    &__container {\r\n      position: relative;\r\n    }\r\n\r\n    &__inner {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    &__track {\r\n      &-bar {\r\n        @include mixins.transition;\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        border-radius: 50%;\r\n        background: var(--circle--track-bar-bg-color);\r\n\r\n        &--inner {\r\n          width: 100%;\r\n          height: 100%;\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          border-radius: 50%;\r\n        }\r\n\r\n        &--bg {\r\n          @include mixins.transition;\r\n\r\n          width: 100%;\r\n          height: 100%;\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          border-radius: 50%;\r\n\r\n          // Can be overridden\r\n          background: var(--circle--track-bar-color);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./circle.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<div class=\"circle__container\" [style.width.px]=\"size\"\n     [style.height.px]=\"size\">\n  <div #circle class=\"circle__inner\">\n\n    <div class=\"circle__track-bar\"\n         [style.-webkit-mask]=\"trackBarMask\"\n    >\n      <div class=\"circle__track-bar--inner\"\n           [style.-webkit-mask]=\"trackBarMaskInner\">\n        <div class=\"circle__track-bar--bg bg-cone\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "DrawCircleComponent",
            "id": "component-DrawCircleComponent-b9f0ce999227be627e561dfffc21b3959e423ccc378afd8819e6e818ddff10cc1807bf6f9347edb2de3bb767fe452c374f4cbf1ad146024c5638cb2fc3c5d974",
            "file": "src/app/modules/shared/draw-circle/draw-circle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-draw-circle",
            "styleUrls": [
                "./draw-circle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./draw-circle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "arcDegree",
                    "defaultValue": "120",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDegree of the circle.\n360 is a full circle.\n",
                    "description": "<p>Degree of the circle.\n360 is a full circle.</p>\n",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle.\n",
                    "description": "<p>Size of the circle.</p>\n",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "leftArc",
                    "defaultValue": "{x: 0, y: 0}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DrawCircleCoordinates",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rightArc",
                    "defaultValue": "{x: 0, y: 0}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DrawCircleCoordinates",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "viewBoxSize",
                    "defaultValue": "120",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_draw",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDraw or update the arc.\n",
                    "description": "<p>Draw or update the arc.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_polarToCartesian",
                    "args": [
                        {
                            "name": "centerX",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "centerY",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "angleInDegrees",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DrawCircleCoordinates",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the Cartesian coordinates of the point on the circle\nwith the given angle and radius from the center.\n",
                    "description": "<p>Calculate the Cartesian coordinates of the point on the circle\nwith the given angle and radius from the center.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1878,
                                "end": 1885,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "centerX"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1872,
                                "end": 1877,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>X coordinate of the center of the circle.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1940,
                                "end": 1947,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "centerY"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1934,
                                "end": 1939,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Y coordinate of the center of the circle.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2002,
                                "end": 2008,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "radius"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1996,
                                "end": 2001,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Radius of the circle.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2043,
                                "end": 2057,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "angleInDegrees"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2037,
                                "end": 2042,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Angle in degrees.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {DrawCircleCoordinates} from \"./draw-circle.interface\";\n\n@Component({\n  selector: 'cv-draw-circle',\n  templateUrl: './draw-circle.component.html',\n  styleUrls: ['./draw-circle.component.scss']\n})\nexport class DrawCircleComponent implements OnInit, OnChanges {\n\n  /**\n   * Degree of the circle.\n   * 360 is a full circle.\n   */\n  @Input() public arcDegree: number = 120;\n\n  /**\n   * Size of the circle.\n   */\n  @Input() public size: number = 300;\n\n  public viewBoxSize = 120;\n\n  /**\n   * Percentage of the circle.\n   * 100 is a full circle.\n   */\n  public get arcPercentage(): number {\n    return this.arcDegree / 360 * 100;\n  }\n\n  public leftArc: DrawCircleCoordinates = {x: 0, y: 0};\n\n  public rightArc: DrawCircleCoordinates = {x: 0, y: 0};\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit() {\n    this._draw();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    if ('size' in changes || 'arcDegree' in changes) {\n      this._draw();\n    }\n  }\n\n  /**\n   * Draw or update the arc.\n   */\n  private _draw() {\n    if (this.arcDegree >= 360) {\n      this.arcDegree = 359.999;\n    }\n    //const center = this.size / 2;\n    const center = 60;\n    const radius = 50;\n    const arcSize = ((100 - this.arcPercentage) / 100) * 180;\n    const startAngle = -arcSize - 90;\n    const endAngle = arcSize - 90;\n\n    /*const startAngle = this.arcDegree - 90;\n    const endAngle = 270 - this.arcDegree;*/\n    console.log('startAngle', startAngle, 'endAngle', endAngle);\n\n    this.leftArc = this._polarToCartesian(center, center, radius, startAngle);\n    this.rightArc = this._polarToCartesian(center, center, radius, endAngle);\n  }\n\n  /**\n   * Calculate the Cartesian coordinates of the point on the circle\n   * with the given angle and radius from the center.\n   * @param centerX X coordinate of the center of the circle.\n   * @param centerY Y coordinate of the center of the circle.\n   * @param radius Radius of the circle.\n   * @param angleInDegrees Angle in degrees.\n   */\n  private _polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): DrawCircleCoordinates {\n    const angleInRadians = angleInDegrees * Math.PI / 180.0;\n\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.circle {\r\n  fill: transparent;\r\n  stroke: #87CEEB;\r\n  stroke-width: 20;\r\n  &:hover {\r\n    stroke: #fa87cc;\r\n  }\r\n}\r\n.inCircle {\r\n  fill: transparent;\r\n  stroke: #43C1F5;\r\n  stroke-width: 1;\r\n  pointer-events: none;\r\n}\r\n.circleContainer {\r\n}\r\n",
                    "styleUrl": "./draw-circle.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "arcPercentage": {
                    "name": "arcPercentage",
                    "getSignature": {
                        "name": "arcPercentage",
                        "type": "number",
                        "returnType": "number",
                        "line": 28,
                        "rawdescription": "\n\nPercentage of the circle.\n100 is a full circle.\n",
                        "description": "<p>Percentage of the circle.\n100 is a full circle.</p>\n"
                    }
                }
            },
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\"\n     [attr.viewBox]=\"'00 00 ' + viewBoxSize + ' ' + viewBoxSize\" preserveAspectRatio=\"xMidYMid\" class=\"circleContainer\"\n     [style.width.px]=\"size\" [style.height.px]=\"size\">\n  <circle [attr.cx]=\"60\" [attr.cy]=\"60\" [attr.r]=\"54\" class=\"inCircle\">\n  </circle>\n  <path class=\"circle\"\n        [attr.d]=\"'M ' +leftArc.x+', ' + leftArc.y +\n        ' A 50 50 0 ' + (arcPercentage > 50 ? 1 : 0) + ' 0 ' + rightArc.x + ', ' + rightArc.y\"\n  >\n  </path>\n</svg>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-d198456e0fa300c1299f6cf45f8dffa776d51b6d77bc66e60cec2fa8dafd2e5b57b9b5a2ff8fdadaab840c941d650ef482e280517456ef0dd9e06a4ab2575883-1",
            "file": "src/app/modules/main/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  > mat-toolbar {\r\n    padding: 0;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<mat-toolbar class=\"bg-transparent\">\n  <cv-menu></cv-menu>\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n    <mat-icon>share</mat-icon>\n  </button>\n</mat-toolbar>\n"
        },
        {
            "name": "InputCircleSliderComponent",
            "id": "component-InputCircleSliderComponent-ec97fb133704fd5b85f1832a8fab2d63d33e079b63fc64fd511d94f4de806c1b88a934f6ea639d953f02dc2ab6ba60793f3d93ff72508a5343aee950c0590084",
            "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputCircleSliderComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "cv-input-circle-slider",
            "styleUrls": [
                "./input-circle-slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-circle-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowCross",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow to drag the handle through the min and max values.\n",
                    "description": "<p>Allow to drag the handle through the min and max values.</p>\n",
                    "line": 87,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "animate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimate the value\n",
                    "description": "<p>Animate the value</p>\n",
                    "line": 97,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "animationCurve",
                    "defaultValue": "[.43, .02, .04, 1]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimation curve\n",
                    "description": "<p>Animation curve</p>\n",
                    "line": 107,
                    "type": "[number, number, number, number]",
                    "decorators": []
                },
                {
                    "name": "animationTime",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimation time\n",
                    "description": "<p>Animation time</p>\n",
                    "line": 102,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "draggable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow drag.\n",
                    "description": "<p>Allow drag.</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum value of the slider.\n",
                    "description": "<p>Maximum value of the slider.</p>\n",
                    "line": 77,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum value of the slider.\n",
                    "description": "<p>Minimum value of the slider.</p>\n",
                    "line": 72,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow value\n",
                    "description": "<p>Show value</p>\n",
                    "line": 112,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle.\n",
                    "description": "<p>Size of the circle.</p>\n",
                    "line": 62,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "0.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStep value.\n",
                    "description": "<p>Step value.</p>\n",
                    "line": 82,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUnit\n",
                    "description": "<p>Unit</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1071,
                            "end": 1237,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1072,
                                "end": 1078,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "access"
                            },
                            "comment": "<p>ControlValueAccessor\nor ngModel directive\nor [(ngModel)]=&quot;value&quot;\nor [ngModel]=&quot;value&quot;\nor [value]=&quot;value&quot;</p>\n"
                        },
                        {
                            "pos": 1237,
                            "end": 1291,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1238,
                                "end": 1245,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<p>Value is 0\nMain value of the slider.</p>\n"
                        }
                    ],
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "valueDigits",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValue digits after the decimal point.\n",
                    "description": "<p>Value digits after the decimal point.</p>\n",
                    "line": 117,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight of the circle line.\n",
                    "description": "<p>Weight of the circle line.</p>\n",
                    "line": 67,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_activeQuarters",
                    "defaultValue": "{\n    first: false,\n    middle: false,\n    last: false,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>Invoked method when the slider is dragged.</p>\n",
                    "line": 137,
                    "rawdescription": "\n\nInvoked method when the slider is dragged.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_circleRect",
                    "defaultValue": "new DOMRect()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DOMRect",
                    "optional": false,
                    "description": "<p>Circle Rect</p>\n",
                    "line": 162,
                    "rawdescription": "\n\nCircle Rect\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "circle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "<p>Circle Dom element.</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nCircle Dom element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'circle'"
                        }
                    ]
                },
                {
                    "name": "isDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>User is currently dragging the handle.</p>\n",
                    "line": 157,
                    "rawdescription": "\n\nUser is currently dragging the handle.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Invoked when the model has been changed</p>\n",
                    "line": 305,
                    "rawdescription": "\n\nInvoked when the model has been changed\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_calculateAngle",
                    "args": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "y",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 285,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the angle of the handle.\n",
                    "description": "<p>Calculate the angle of the handle.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "y",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_calculateValueFromAngle",
                    "args": [
                        {
                            "name": "angle",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 298,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate value from angle.\n",
                    "description": "<p>Calculate value from angle.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "angle",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_preventCross",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPrevent the handle to go over the min and max values.\nListen to the activated quarters to know where the handle comes from.\n",
                    "description": "<p>Prevent the handle to go over the min and max values.\nListen to the activated quarters to know where the handle comes from.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5963,
                                "end": 5968,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5957,
                                "end": 5962,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "_updateQuarters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the active quarters from current value.\nThis is needed to constraint the handle to pass through all quarters of the circle.\nSee allowCross\n\nWhen sliding, update activated quarters.\n",
                    "description": "<p>Calculate the active quarters from current value.\nThis is needed to constraint the handle to pass through all quarters of the circle.\nSee allowCross</p>\n<p>When sliding, update activated quarters.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "drag",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 235,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMoving the handle.\n",
                    "description": "<p>Moving the handle.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 185,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 316,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 320,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "startDrag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStart dragging the handle.\n",
                    "description": "<p>Start dragging the handle.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "stopDrag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStop dragging the handle.\n",
                    "description": "<p>Stop dragging the handle.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "updateChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInvoked method when value changes.\n",
                    "description": "<p>Invoked method when value changes.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 327,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7246,
                                "end": 7251,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7240,
                                "end": 7245,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Input Circle Slider Component\nWorks with the ngModel directive\nUses the controlValueAccessor interface to work with the ngModel directive</p>\n<div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;input-circle-slider [(ngModel)]=&quot;value&quot;&gt;&lt;/input-circle-slider&gt;\n```html\n&lt;input-circle-slider [(ngModel)]=&quot;value&quot; [min]=&quot;0&quot; [max]=&quot;100&quot; [step]=&quot;1&quot;&gt;&lt;/input-circle-slider&gt;</code></pre></div>",
            "rawdescription": "\n\nInput Circle Slider Component\nWorks with the ngModel directive\nUses the controlValueAccessor interface to work with the ngModel directive\n```html\n<input-circle-slider [(ngModel)]=\"value\"></input-circle-slider>\n```html\n<input-circle-slider [(ngModel)]=\"value\" [min]=\"0\" [max]=\"100\" [step]=\"1\"></input-circle-slider>\n```",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {animateValueUtil} from \"../../../utils/animate-value.util\";\n\n/**\n * Input Circle Slider Component\n * Works with the ngModel directive\n * Uses the controlValueAccessor interface to work with the ngModel directive\n * @example\n * <input-circle-slider [(ngModel)]=\"value\"></input-circle-slider>\n * @example\n * <input-circle-slider [(ngModel)]=\"value\" [min]=\"0\" [max]=\"100\" [step]=\"1\"></input-circle-slider>\n */\n@Component({\n  selector: 'cv-input-circle-slider',\n  templateUrl: './input-circle-slider.component.html',\n  styleUrls: ['./input-circle-slider.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputCircleSliderComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputCircleSliderComponent implements OnInit, AfterViewInit, OnChanges, ControlValueAccessor {\n\n  /**\n   * @access ControlValueAccessor\n   *        or ngModel directive\n   *        or [(ngModel)]=\"value\"\n   *        or [ngModel]=\"value\"\n   *        or [value]=\"value\"\n   * @default Value is 0\n   * Main value of the slider.\n   */\n  @Input() public value: number = 0;\n\n  /**\n   * Unit\n   */\n  @Input() public unit: string = '';\n\n  /**\n   * Circle Dom element.\n   */\n  @ViewChild('circle') circle: ElementRef | undefined;\n\n  /**\n   * Size of the circle.\n   */\n  @Input() public size: number = 200;\n\n  /**\n   * Weight of the circle line.\n   */\n  @Input() public weight: number = 10;\n\n  /**\n   * Minimum value of the slider.\n   */\n  @Input() public min: number = 0;\n\n  /**\n   * Maximum value of the slider.\n   */\n  @Input() public max: number = 100;\n\n  /**\n   * Step value.\n   */\n  @Input() public step: number = 0.1;\n\n  /**\n   * Allow to drag the handle through the min and max values.\n   */\n  @Input() public allowCross: boolean = false;\n\n  /**\n   * Allow drag.\n   */\n  @Input() public draggable: boolean = true;\n\n  /**\n   * Animate the value\n   */\n  @Input() public animate: boolean = true;\n\n  /**\n   * Animation time\n   */\n  @Input() public animationTime: number = 1000;\n\n  /**\n   * Animation curve\n   */\n  @Input() public animationCurve: [number, number, number, number] = [.43, .02, .04, 1];\n\n  /**\n   * Show value\n   */\n  @Input() public showValue: boolean = true;\n\n  /**\n   * Value digits after the decimal point.\n   */\n  @Input() public valueDigits = 0;\n\n  /**\n   * Value as percentage.\n   */\n  public get valuePercentage(): number {\n    return this.value * 100 / this.max;\n  }\n\n  /**\n   * Formatted value.\n   */\n  public get formattedValue(): string {\n    const digits = this.valueDigits > 0 ? this.valueDigits : 0;\n    return this.value.toFixed(digits);\n  }\n\n  /**\n   * Invoked method when the slider is dragged.\n   */\n  private _activeQuarters: {\n    first: boolean,\n    middle: boolean,\n    last: boolean\n  } = {\n    first: false,\n    middle: false,\n    last: false,\n  }\n\n  /**\n   * The transform value as string of the rotation for the handle.\n   */\n\n  public get handleTransform(): string {\n    return `rotate(${this.valuePercentage * 3.6}deg)`;\n  }\n  /**\n   * User is currently dragging the handle.\n   */\n  public isDragging = false;\n\n  /**\n   * Circle Rect\n   */\n  private _circleRect: DOMRect = new DOMRect();\n\n  /**\n   * @constructor\n   */\n  public constructor() {}\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    this._updateQuarters();\n    if (this.animate) {\n      // Animate the value from 0 to the current value in 1 second.\n      animateValueUtil((value) => {\n        this.value = value;\n      },0, this.value, this.animationTime, this.animationCurve);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    if ('size' in changes || 'weight' in changes) {\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngAfterViewInit(): void {\n  }\n\n  /**\n   * @event mousedown\n   * Start dragging the handle.\n   */\n  public startDrag(): void {\n    if (this.draggable) {\n      this.isDragging = true;\n      this._updateQuarters();\n    }\n  }\n\n  /**\n   * Calculate the active quarters from current value.\n   * This is needed to constraint the handle to pass through all quarters of the circle.\n   * @see allowCross\n   *\n   * When sliding, update activated quarters.\n   */\n  private _updateQuarters(): void {\n    this._activeQuarters = {\n      first: this.value >= this.max / 4,\n      // Can also be middle: this.value >= this.max / 2;\n      middle: this.value >= this.max / 4 && this.value <= (this.max / 4) * 3,\n      last: this.value > (this.max / 4) * 3,\n    }\n  }\n\n  /**\n   * @event mouseup\n   * Stop dragging the handle.\n   */\n  public stopDrag(): void {\n    this.isDragging = false;\n  }\n\n  /**\n   * @event mousemove\n   * Moving the handle.\n   */\n  public drag(event: MouseEvent): void {\n    if (this.isDragging && this.circle != null) {\n      const circle = this.circle.nativeElement;\n      this._circleRect = circle.getBoundingClientRect();\n\n      const x = event.clientX - this._circleRect.left;\n      const y = event.clientY - this._circleRect.top;\n      const angle = this._calculateAngle(x, y);\n      let value = this._calculateValueFromAngle(angle);\n\n      /**\n       * If the cross is not allowed, we need to prevent the handle to go over the min and max values.\n       * Need to check where the handle comes from.\n       * The value should never jump from min to max or max to min.\n       */\n      if (!this.allowCross) {\n        this._updateQuarters();\n        value = this._preventCross(value);\n      }\n\n      // Round the value to the nearest step\n      value = Math.round(value / this.step) * this.step;\n\n      this.writeValue(value);\n      this.updateChanges();\n    }\n  }\n\n  /**\n   * Prevent the handle to go over the min and max values.\n   * Listen to the activated quarters to know where the handle comes from.\n   * @param value\n   */\n  private _preventCross(value: number): number {\n\n    // Can't pass from max to min\n    if (this._activeQuarters.last && value < (this.max / 4) * 3) {\n      value = this.max;\n    }\n\n    // Can't pass from min to max\n    else if (!this._activeQuarters.first && value > this.max / 4) {\n      value = this.min;\n    }\n    return  value;\n  }\n\n  /**\n   * Calculate the angle of the handle.\n   */\n  private _calculateAngle(x: number, y: number): number {\n    let angle = Math.atan2(y - this.size / 2, x - this.size / 2) * 180 / Math.PI + 90;\n    // Prevent the handle to go over the 0°\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n\n    return angle;\n  }\n\n  /**\n   * Calculate value from angle.\n   */\n  private _calculateValueFromAngle(angle: number): number {\n    return angle * (this.max - this.min) / 360 + this.min;\n  }\n\n  /**\n   * Invoked when the model has been changed\n   */\n  public onChange: (_: any) => void = (_: any) => {};\n\n  /**\n   * Invoked method when value changes.\n   */\n  public updateChanges(): void {\n    if (typeof this.onChange === 'function') {\n      this.onChange(this.value);\n    }\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n  }\n\n  /**\n   * @event input\n   * @param value\n   */\n  public writeValue(value: number): void {\n    this.value = value;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n:host {\r\n  display: flex;\r\n}\r\n\r\n.input-circle-slider {\r\n  &__container {\r\n    position: relative;\r\n  }\r\n\r\n  &__ol {\r\n    height: 100vh;\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999999;\r\n    display: flex;\r\n  }\r\n\r\n  &__circle {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 50%;\r\n\r\n    &__value {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      color: #fff;\r\n\r\n      .value {\r\n        font-size: 2rem;\r\n        font-weight: 700;\r\n      }\r\n\r\n      .unit {\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        margin-left: 0.2rem;\r\n      }\r\n    }\r\n\r\n    &__track {\r\n      &-handle {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 50%;\r\n        width: 0;\r\n        height: 50%;\r\n\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: center;\r\n        transform-origin: center bottom;\r\n\r\n        .handler {\r\n          cursor: pointer;\r\n          position: absolute;\r\n          bottom: calc(100% - 20px);\r\n          left: calc(50% - 15px);\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 50%;\r\n          background: var(--input-circle-slider--handler-color);\r\n          display: flex;\r\n          z-index: 30;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./input-circle-slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 162,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": []
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges",
                "ControlValueAccessor"
            ],
            "accessors": {
                "valuePercentage": {
                    "name": "valuePercentage",
                    "getSignature": {
                        "name": "valuePercentage",
                        "type": "number",
                        "returnType": "number",
                        "line": 122,
                        "rawdescription": "\n\nValue as percentage.\n",
                        "description": "<p>Value as percentage.</p>\n"
                    }
                },
                "formattedValue": {
                    "name": "formattedValue",
                    "getSignature": {
                        "name": "formattedValue",
                        "type": "string",
                        "returnType": "string",
                        "line": 129,
                        "rawdescription": "\n\nFormatted value.\n",
                        "description": "<p>Formatted value.</p>\n"
                    }
                },
                "handleTransform": {
                    "name": "handleTransform",
                    "getSignature": {
                        "name": "handleTransform",
                        "type": "string",
                        "returnType": "string",
                        "line": 151,
                        "rawdescription": "\n\nThe transform value as string of the rotation for the handle.\n",
                        "description": "<p>The transform value as string of the rotation for the handle.</p>\n"
                    }
                }
            },
            "templateData": "<div class=\"input-circle-slider__container\"\n     [style.width.px]=\"size\"\n     [style.height.px]=\"size\"\n>\n  <div #circle class=\"input-circle-slider__circle\">\n    <cv-circle [size]=\"size\" [weight]=\"weight\" [fillPercentage]=\"valuePercentage\"></cv-circle>\n    <div *ngIf=\"showValue\" class=\"input-circle-slider__circle__value\">\n      <span class=\"value\">{{formattedValue}}</span>\n      <span *ngIf=\"unit != null\" class=\"unit\">{{unit}}</span>\n    </div>\n    <div class=\"input-circle-slider__circle__track-handle\"\n      [style.transform]=\"handleTransform\"\n      >\n      <div class=\"handler\" (mousedown)=\"startDrag()\">\n\n        <!--Insert content for custom handle here-->\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"isDragging === true\" (mouseup)=\"stopDrag()\" (mousemove)=\"drag($event)\"\n     class=\"input-circle-slider__ol\"></div>\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-c37d79de777512a38552859d3df4702974aaa8bb5a7a1e395a53e48932a5847eac315d6779cf10b8eba2e976d2c995753fcf6ede6841587ccd73d2838a682cea",
            "file": "src/app/modules/main/components/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ltrState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Left to right state (for animation).</p>\n",
                    "line": 30,
                    "rawdescription": "\nLeft to right state (for animation).",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menu",
                    "defaultValue": "[\n    {\n      label: 'Home',\n      link: '/',\n      index: 0,\n    },\n    {\n      label: 'About me',\n      link: '/about-me',\n      index: 1,\n    },\n    {\n      label: 'Contact',\n      link: '/contact',\n      index: 2,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "<p>Menu items</p>\n",
                    "line": 39,
                    "rawdescription": "\n\nMenu items\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1047,
                            "end": 1080,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1048,
                                "end": 1052,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "todo"
                            },
                            "comment": "<p>: Move to routing module</p>\n"
                        }
                    ]
                },
                {
                    "name": "routerOutlet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RouterOutlet",
                    "optional": true,
                    "description": "<p>Router outlet DOM Element.</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nRouter outlet DOM Element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "RouterOutlet"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rtlState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Right to left state (for animation).</p>\n",
                    "line": 33,
                    "rawdescription": "\nRight to left state (for animation).",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTabNavPanel",
                    "optional": true,
                    "description": "<p>Tab panel DOM Element.</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nTab panel DOM Element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabPanel'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RouterOutlet} from \"@angular/router\";\nimport {\n  ROUTER_LTR_TRANSITION_CONSTANT,\n  ROUTER_RTL_TRANSITION_CONSTANT,\n} from \"../../../../constants/router-transition.constant\";\nimport {PageService} from \"../../../../services/page.service\";\nimport {MatTabNavPanel} from \"@angular/material/tabs\";\nimport {MenuItem} from \"../menu/menu.interface\";\n\n@Component({\n  selector: 'cv-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  animations: [ROUTER_RTL_TRANSITION_CONSTANT, ROUTER_LTR_TRANSITION_CONSTANT]\n})\nexport class LayoutComponent implements OnInit {\n\n  /**\n   * Router outlet DOM Element.\n   */\n  @ViewChild(RouterOutlet) public routerOutlet?: RouterOutlet;\n\n  /**\n   * Tab panel DOM Element.\n   */\n  @ViewChild('tabPanel') public tabPanel?: MatTabNavPanel;\n\n  /** Left to right state (for animation). */\n  public ltrState = false;\n\n  /** Right to left state (for animation). */\n  public rtlState = false;\n\n  /**\n   * Menu items\n   * @todo: Move to routing module\n   */\n  public menu: MenuItem[] = [\n    {\n      label: 'Home',\n      link: '/',\n      index: 0,\n    },\n    {\n      label: 'About me',\n      link: '/about-me',\n      index: 1,\n    },\n    {\n      label: 'Contact',\n      link: '/contact',\n      index: 2,\n    },\n  ];\n\n  /**\n   * @constructor\n   * @param _pageService\n   */\n  public constructor(\n    private readonly _pageService: PageService,\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    /** Set the tab panel to show the pages. */\n    if (this.tabPanel != null) {\n      this._pageService.setPagePanel(this.tabPanel);\n    }\n\n    /** Get the direction of page change. */\n    this._pageService.pageDirection$.subscribe(direction => {\n      direction ? this.ltrState = !this.ltrState : this.rtlState = !this.rtlState;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n\r\n:host {\r\n  background: fn.get-color(contrast, 600);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  > mat-tab-nav-panel {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n\r\n    > main {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_pageService",
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1378,
                            "end": 1390,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_pageService"
                        },
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1372,
                            "end": 1377,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<cv-header></cv-header>\n<mat-tab-nav-panel #tabPanel>\n  <main [@routerTransitionRtL]=\"rtlState\"\n        [@routerTransitionLtR]=\"ltrState\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </main>\n</mat-tab-nav-panel>\n\n"
        },
        {
            "name": "MainComponent",
            "id": "component-MainComponent-82e734913a19973b9f67061244b5c0aa78d24112a5ecbfb8f0c9da3221075505a8e966f487e80b553d2f40601c60d73ac86624a4d31313f9ddd8207d2b86f360",
            "file": "src/app/modules/main/components/main/main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-main",
            "styleUrls": [
                "./main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cv-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./main.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<cv-layout></cv-layout>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-abc1834c7cc299cd978275d46f20f112c740f039dd8ae9dc1ab451dcbe10f8d83ca227a493cc8b221ade27a0dc0496dc1ba60f9fd1c8e52b74737db25cfbe4bb",
            "file": "src/app/modules/main/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": true,
                    "description": "<p>Current active menu item.</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nCurrent active menu item.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "<p>Reference to the menu items to be displayed.</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nReference to the menu items to be displayed.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanel",
                    "defaultValue": "new MatTabNavPanel()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Content Panel DOM Element.</p>\n",
                    "line": 17,
                    "rawdescription": "\n\nContent Panel DOM Element.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_activateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActivate the given item. Deactivate all other items.\n",
                    "description": "<p>Activate the given item. Deactivate all other items.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2489,
                                "end": 2493,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2483,
                                "end": 2488,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "_setItemsFromRoutes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet Menu items from app routing.\n",
                    "description": "<p>Get Menu items from app routing.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterContentChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "onClicked",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigate to the given link.\n",
                    "description": "<p>Navigate to the given link.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2194,
                                "end": 2198,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2188,
                                "end": 2193,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterContentChecked, ChangeDetectorRef, Component, Input, NgZone, OnInit} from '@angular/core';\nimport {MatTabNavPanel} from \"@angular/material/tabs\";\nimport {PageService} from \"../../../../services/page.service\";\nimport {Route, Router} from \"@angular/router\";\nimport {MenuItem} from \"./menu.interface\";\n\n@Component({\n  selector: 'cv-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit, AfterContentChecked {\n\n  /**\n   * Content Panel DOM Element.\n   */\n  public tabPanel = new MatTabNavPanel();\n\n  /**\n   * Reference to the menu items to be displayed.\n   */\n  public items: MenuItem[] = [];\n\n  /**\n   * Current active menu item.\n   */\n  public activeItem?: MenuItem;\n\n  /**\n   * @constructor\n   * @param _pageService\n   * @param _router\n   * @param _ngZone\n   * @param _changeDetectorRef\n   */\n  public constructor(\n    private readonly _pageService: PageService,\n    private readonly _router: Router,\n    private readonly _ngZone: NgZone,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    /**\n     * Get the tab panel to show the pages.\n     */\n    this._pageService.pagePanel$.subscribe(pagePanel => {\n      if (pagePanel != null) {\n        this.tabPanel = pagePanel;\n      }\n    });\n\n    this._setItemsFromRoutes();\n  }\n\n  /**\n   * Get Menu items from app routing.\n   */\n  private _setItemsFromRoutes(): void {\n    const items: MenuItem[] = [];\n    this._router.config.forEach(route => {\n\n      if (route.data != null && route.data['menuItem'] != null) {\n        items.push({\n          label: route.data['menuItem'].label,\n          link: '/' + route.path,\n          index: route.data['menuItem'].index,\n        });\n      }\n    });\n    this.items = items;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngAfterContentChecked(): void {\n    this.activeItem = this.items.find(item => item.link ===  this._router.url);\n    if (this.activeItem != null) {\n      this._activateItem(this.activeItem);\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * @event click on menu item\n   * Navigate to the given link.\n   * @param item\n   */\n  public onClicked(item: MenuItem): void {\n    if (this.activeItem !== undefined) {\n      const direction = this.activeItem.index > item.index;\n      this._pageService.setPageDirection(direction);\n    }\n  }\n\n  /**\n   * Activate the given item. Deactivate all other items.\n   * @param item\n   */\n  private _activateItem(item: MenuItem): void {\n    this.items.filter(menuItem => menuItem !== item).forEach(menuItem => menuItem.active = false);\n    item.active = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_pageService",
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_changeDetectorRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 795,
                            "end": 807,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_pageService"
                        },
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 789,
                            "end": 794,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 820,
                            "end": 827,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 814,
                            "end": 819,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 840,
                            "end": 847,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_ngZone"
                        },
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 834,
                            "end": 839,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 860,
                            "end": 878,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_changeDetectorRef"
                        },
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 854,
                            "end": 859,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterContentChecked"
            ],
            "templateData": "<nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n  <div mat-tab-link *ngFor=\"let item of items\"\n       [id]=\"'mat-tab-link-' + item.index\"\n       (click)=\"onClicked(item)\"\n       [routerLink]=\"item.link\"\n       [active]=\"item.active\">\n    <span>{{item.label}}</span>\n  </div>\n</nav>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageContactComponent",
            "id": "component-PageContactComponent-c7d365c18e55aadca33cc99ab823ef15ce16d3da4a445cb7df2c9d946269d775b0596de22bd2308a258dfd2cdaecf248052406720eac0a51c2bf0bde79ef65c7",
            "file": "src/app/modules/main/components/page-contact/page-contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-page-contact",
            "styleUrls": [
                "./page-contact.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-contact.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-page-contact',\n  templateUrl: './page-contact.component.html',\n  styleUrls: ['./page-contact.component.scss']\n})\nexport class PageContactComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-contact.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>page-contact works!</p>\n"
        },
        {
            "name": "PageHomeComponent",
            "id": "component-PageHomeComponent-fbda510d1bc78702e400bf1db8402ca4112ad600f8e77ad86b7c2e52e468beec84c16f4effa62b6185cc87f15212af6a4984822a0855da48757e606c7adbe1ec",
            "file": "src/app/modules/main/components/page-home/page-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-page-home",
            "styleUrls": [
                "./page-home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-page-home',\n  templateUrl: './page-home.component.html',\n  styleUrls: ['./page-home.component.scss']\n})\nexport class PageHomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>page-home works!</p>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-9918f130571068e1d7218637da3a9ef562da19f5d58df68a9c8db052ab315647d5be2e97ababc0798a22c1757a3437bf14ef345f2ecf81d7537ceacbccdc70f9",
            "file": "src/app/modules/main/components/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "outerCircleVal",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Outer circle fill percentage.\nUsefully for animations.</p>\n",
                    "line": 15,
                    "rawdescription": "\n\nOuter circle fill percentage.\nUsefully for animations.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\nimport {animateValueUtil} from \"../../../../utils/animate-value.util\";\n\n@Component({\n  selector: 'cv-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  /**\n   * Outer circle fill percentage.\n   * Usefully for animations.\n   */\n  public outerCircleVal = 100;\n\n  /**\n   * @constructor\n   */\n  public constructor() {\n  }\n\n  /**\n   * @inheritDoc\n    */\n  public ngOnInit() {\n    animateValueUtil((val) => {\n      this.outerCircleVal = val;\n    }, 0, this.outerCircleVal, 2000, [.77, 0, 0, 1.06])\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n@use \"sass:math\";\r\n\r\n.profile {\r\n  &__container {\r\n    position: relative;\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n\r\n  &__circle {\r\n    .circle-wrapper {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      border-radius: 50%;\r\n    }\r\n    .circle-outer {\r\n      &__thin {\r\n        $size: 240px;\r\n        $offset: 300px - $size;\r\n        width: calc(100% - #{$offset});\r\n        height: calc(100% - #{$offset});\r\n        top: math.div($offset, 2);\r\n        left: math.div($offset, 2);\r\n        mask: conic-gradient(from 30deg,\r\n          transparent 60deg,\r\n          black 60deg, black 89deg,\r\n          transparent 89deg, transparent 91.5deg,\r\n          black 92deg, black 120deg,\r\n          transparent 120deg, transparent 300deg,\r\n          black 300deg, black 329deg,\r\n          transparent 329deg, transparent 331deg,\r\n          black 331deg\r\n        );\r\n        --circle--track-bar-color: conic-gradient(from 60deg,\r\n          #{fn.get-color(primary, 600)} 30deg,\r\n          #{fn.get-color(primary, 900)} 180deg,\r\n          #{fn.get-color(primary, 600, 0.2)}  330deg);\r\n      }\r\n\r\n      &__tools {\r\n        mask: conic-gradient(from 30deg,\r\n          transparent 122deg,\r\n          black 122.5deg, black 148deg,\r\n          transparent 148.5deg, transparent 150deg,\r\n          black 150deg, black 298deg,\r\n          transparent 298.5deg\r\n        );\r\n        --circle--track-bar-color: conic-gradient(from 120deg,\r\n          #{fn.get-color(primary, 800, 1)} 0deg,\r\n          #{fn.get-color(primary, 300, 0.1)}  360deg);\r\n      }\r\n\r\n      &__input {\r\n        $size: 210px;\r\n        $offset: 300px - $size;\r\n        width: calc(100% - #{$offset});\r\n        height: calc(100% - #{$offset});\r\n        top: math.div($offset, 2);\r\n        left: math.div($offset, 2);\r\n        --circle--track-bar-color: conic-gradient(from 0deg,\r\n          #{fn.get-color(primary, 600, 0.4)} 30deg,\r\n          #{fn.get-color(primary, 900)} 180deg,\r\n          #{fn.get-color(primary, 600, 0.4)} 330deg);\r\n\r\n        --input-circle-slider--handler-color: transparent;\r\n\r\n        .handler {\r\n          position: relative;\r\n          left: -90px;\r\n          top: 10px;\r\n          --circle--track-bar-color: #{fn.get-color(primary, 900)};\r\n\r\n          &:hover {\r\n            --circle--track-bar-color: #{fn.get-color(primary, 600)};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": []
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"profile__container\">\n  <div class=\"profile__circle\">\n    <div class=\"circle-outer__thin circle-wrapper\">\n      <cv-circle [size]=\"240\" [fillPercentage]=\"outerCircleVal\" [startAt]=\"9\"></cv-circle>\n    </div>\n    <div class=\"circle-outer__tools circle-wrapper\">\n      <cv-circle [size]=\"300\" [weight]=\"40\" [fillPercentage]=\"outerCircleVal\" [startAt]=\"9\"></cv-circle>\n    </div>\n    <div class=\"circle-outer__input circle-wrapper\">\n      <cv-input-circle-slider class=\"circle-input\" [showValue]=\"false\"\n                              [value]=\"90\"\n                              [size]=\"210\"\n                              [animationTime]=\"2800\"\n                              [allowCross]=\"true\"\n                              [weight]=\"2\">\n        <cv-circle class=\"handler\" [startAt]=\"88\" [size]=\"210\" [weight]=\"30\" [fillPercentage]=\"25\"></cv-circle>\n      </cv-input-circle-slider>\n    </div>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-3357d854d458196d642e7f0da2c0faa6327af528a7f5831d31b8a32427db80d00ec8bbb0261209e6089f9cc2f18d2feeec21a1332901d45e271a8ed70a17cac2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "// TODO: Uncomment all lines when https://github.com/ngx-translate/core/pull/1399 is merged\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './modules/main/main.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {RouterModule} from \"@angular/router\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\n/*\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MainModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    /*TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),*/\n  ],\n  exports: [\n    //TranslateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MainModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3d72550b69a194935138085a767eea1b9f579abf12ca06f71a8975c9e6a11a3bda8c0080c8a820dfe24a69398e99f35df09c3f85aec52111f604ecf1c165bef0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {PageHomeComponent} from \"./modules/main/components/page-home/page-home.component\";\nimport {PageContactComponent} from \"./modules/main/components/page-contact/page-contact.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageHomeComponent,\n    data: {\n      state: 'home',\n      menuItem: {\n        label: 'Soheil Saheb-Jamii',\n        index: 0\n      }\n    }\n  },\n  {\n    path: 'contact',\n    component: PageContactComponent,\n    data: {\n      state: 'contact',\n      menuItem: {\n        label: 'Contact',\n        index: 1\n      }\n    }\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  }\n];\n\nexport const appRouting = RouterModule.forRoot(routes);\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CircleModule",
            "id": "module-CircleModule-b06311f783dd621c7f2f1567d63ca745ea978cbcaa848544d453f86f8c7af74a4ed2486675997d77f5f85557b2dd92c27fb3e81c1f387357d01193351b24c517",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/circle/circle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircleComponent } from './circle.component';\n\n\n\n@NgModule({\n  declarations: [\n    CircleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CircleComponent\n  ]\n})\nexport class CircleModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CircleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CircleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DrawCircleModule",
            "id": "module-DrawCircleModule-539855a34251786f5abac6c15232e624ce8fd1d553f27b0a9b1b308fe3d17fddb1d034575deb2a45626ddaffd286b2150e70eea6e5e08613b8cd1492dd961f71",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/draw-circle/draw-circle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawCircleComponent } from './draw-circle.component';\n\n\n\n@NgModule({\n  declarations: [\n    DrawCircleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DrawCircleComponent\n  ]\n})\nexport class DrawCircleModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DrawCircleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DrawCircleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputCircleSliderModule",
            "id": "module-InputCircleSliderModule-e25daeffbc6e41bd80d250d90245dc4f9a99ce7efdd5ae58540c26418e18583025a73765d138cafde26ebf99a881d4aa61e2b384df2c15499390bfac524c80ce",
            "description": "<p>Module for the InputCircleSliderComponent.</p>\n",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputCircleSliderComponent } from './input-circle-slider.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport {CircleModule} from \"../circle/circle.module\";\n\n/**\n * Module for the InputCircleSliderComponent.\n */\n@NgModule({\n  declarations: [\n    InputCircleSliderComponent\n  ],\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CircleModule\n    ],\n  exports: [\n    InputCircleSliderComponent\n  ],\n})\nexport class InputCircleSliderModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputCircleSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CircleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputCircleSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MainModule",
            "id": "module-MainModule-f5b9ec6604b1cbdcf8452b16c6981d6092cc72f681edb641b1e8fe5c61ac601f47878730905548012eabf1010dfd80222b10e872cfbfeb586f477b06c33d6c66",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/main/main.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './components/main/main.component';\nimport {LayoutComponent} from \"./components/layout/layout.component\";\nimport { PageHomeComponent } from './components/page-home/page-home.component';\nimport { PageContactComponent } from './components/page-contact/page-contact.component';\nimport {RouterLink, RouterModule} from \"@angular/router\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport { HeaderComponent } from './components/header/header.component';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport { MenuComponent } from './components/menu/menu.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport {CircleModule} from \"../shared/circle/circle.module\";\nimport {InputCircleSliderModule} from \"../shared/input-circle-slider/input-circle-slider.module\";\n\n\n\n@NgModule({\n    declarations: [\n        MainComponent,\n        LayoutComponent,\n        PageHomeComponent,\n        PageContactComponent,\n        HeaderComponent,\n        MenuComponent,\n        ProfileComponent,\n    ],\n  imports: [\n    CommonModule,\n    RouterLink,\n    RouterModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    CircleModule,\n    InputCircleSliderModule\n  ],\n  exports: [\n    MainComponent,\n    LayoutComponent\n  ],\n})\nexport class MainModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MainComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "PageContactComponent"
                        },
                        {
                            "name": "PageHomeComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CircleModule"
                        },
                        {
                            "name": "InputCircleSliderModule"
                        },
                        {
                            "name": "RouterLink"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MainComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "animateValueUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/animate-value.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\r\n  cb: (value: number) => void,\r\n  start: number,\r\n  end: number,\r\n  duration: number = 1000,\r\n  ease: [number, number, number, number] = [.43, .02, .04, 1]\r\n): void => {\r\n  let startTimestamp: number | null = null;\r\n  const step = (timestamp: number) => {\r\n    if (!startTimestamp) startTimestamp = timestamp;\r\n    const progress = Math.min((timestamp - startTimestamp) / duration, 1);\r\n    //this.value = start + progress * (end - start);\r\n\r\n    const value = start + easeInOutCubicUtil(progress, ease) * (end - start);\r\n    cb(value);\r\n    if (progress < 1) {\r\n      window.requestAnimationFrame(step);\r\n    }\r\n  };\r\n  window.requestAnimationFrame(step);\r\n}",
                "rawdescription": "Animate number value.",
                "description": "<p>Animate number value.</p>\n"
            },
            {
                "name": "appRouting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app-routing.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "RouterModule.forRoot(routes)"
            },
            {
                "name": "Circle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/circle/circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CircleSlider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DrawCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "easeInOutCubicUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/ease-in-out-cubic.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n}",
                "rawdescription": "Ease in out cubic function.",
                "description": "<p>Ease in out cubic function.</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Layout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/main/main.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MainStorybookModuleConstant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/main-storybook-module.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  declarations: [\n      MainComponent,\n      LayoutComponent,\n      PageHomeComponent,\n      PageContactComponent,\n      HeaderComponent,\n      MenuComponent,\n      ProfileComponent\n  ],\n  imports: [\n    appRouting,\n    BrowserAnimationsModule,\n    CircleModule,\n    CommonModule,\n    RouterLink,\n    RouterModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    InputCircleSliderModule,\n  ],\n  exports: [\n    MainComponent,\n    LayoutComponent,\n    HeaderComponent,\n    ProfileComponent\n  ],\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Profile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ROUTER_LTR_TRANSITION_CONSTANT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/router-transition.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routerTransitionLtR', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                "rawdescription": "Router transition constant.\r\nLeft to right.",
                "description": "<p>Router transition constant.\nLeft to right.</p>\n"
            },
            {
                "name": "ROUTER_RTL_TRANSITION_CONSTANT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/router-transition.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routerTransitionRtL', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                "rawdescription": "Router transition constant.\r\nRight to left.",
                "description": "<p>Router transition constant.\nRight to left.</p>\n"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DrawCircleComponent>",
                "defaultValue": "(args: DrawCircleComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/circle/circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CircleComponent>",
                "defaultValue": "(args: CircleComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputCircleSliderComponent>",
                "defaultValue": "(args: InputCircleSliderComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/main/main.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MainComponent>",
                "defaultValue": "(args: MainComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LayoutComponent>",
                "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MenuComponent>",
                "defaultValue": "(args: MenuComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProfileComponent>",
                "defaultValue": "(args: ProfileComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/utils/animate-value.util.ts": [
                {
                    "name": "animateValueUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/animate-value.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\r\n  cb: (value: number) => void,\r\n  start: number,\r\n  end: number,\r\n  duration: number = 1000,\r\n  ease: [number, number, number, number] = [.43, .02, .04, 1]\r\n): void => {\r\n  let startTimestamp: number | null = null;\r\n  const step = (timestamp: number) => {\r\n    if (!startTimestamp) startTimestamp = timestamp;\r\n    const progress = Math.min((timestamp - startTimestamp) / duration, 1);\r\n    //this.value = start + progress * (end - start);\r\n\r\n    const value = start + easeInOutCubicUtil(progress, ease) * (end - start);\r\n    cb(value);\r\n    if (progress < 1) {\r\n      window.requestAnimationFrame(step);\r\n    }\r\n  };\r\n  window.requestAnimationFrame(step);\r\n}",
                    "rawdescription": "Animate number value.",
                    "description": "<p>Animate number value.</p>\n"
                }
            ],
            "src/app/app-routing.module.ts": [
                {
                    "name": "appRouting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app-routing.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "RouterModule.forRoot(routes)"
                }
            ],
            "src/app/modules/shared/circle/circle.stories.ts": [
                {
                    "name": "Circle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/circle/circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/circle/circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CircleComponent>",
                    "defaultValue": "(args: CircleComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts": [
                {
                    "name": "CircleSlider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputCircleSliderComponent>",
                    "defaultValue": "(args: InputCircleSliderComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/shared/draw-circle/draw-circle.stories.ts": [
                {
                    "name": "DrawCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DrawCircleComponent>",
                    "defaultValue": "(args: DrawCircleComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/utils/ease-in-out-cubic.util.ts": [
                {
                    "name": "easeInOutCubicUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/ease-in-out-cubic.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n}",
                    "rawdescription": "Ease in out cubic function.",
                    "description": "<p>Ease in out cubic function.</p>\n"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/modules/main/components/header/header.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/main/components/layout/layout.stories.ts": [
                {
                    "name": "Layout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LayoutComponent>",
                    "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/main/components/main/main.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/main/main.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/main/main.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MainComponent>",
                    "defaultValue": "(args: MainComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/main-storybook-module.constant.ts": [
                {
                    "name": "MainStorybookModuleConstant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/main-storybook-module.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  declarations: [\n      MainComponent,\n      LayoutComponent,\n      PageHomeComponent,\n      PageContactComponent,\n      HeaderComponent,\n      MenuComponent,\n      ProfileComponent\n  ],\n  imports: [\n    appRouting,\n    BrowserAnimationsModule,\n    CircleModule,\n    CommonModule,\n    RouterLink,\n    RouterModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    InputCircleSliderModule,\n  ],\n  exports: [\n    MainComponent,\n    LayoutComponent,\n    HeaderComponent,\n    ProfileComponent\n  ],\n}"
                }
            ],
            "src/app/modules/main/components/menu/menu.stories.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MenuComponent>",
                    "defaultValue": "(args: MenuComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/profile/profile.stories.ts": [
                {
                    "name": "Profile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProfileComponent>",
                    "defaultValue": "(args: ProfileComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/constants/router-transition.constant.ts": [
                {
                    "name": "ROUTER_LTR_TRANSITION_CONSTANT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/router-transition.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routerTransitionLtR', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                    "rawdescription": "Router transition constant.\r\nLeft to right.",
                    "description": "<p>Router transition constant.\nLeft to right.</p>\n"
                },
                {
                    "name": "ROUTER_RTL_TRANSITION_CONSTANT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/router-transition.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routerTransitionRtL', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                    "rawdescription": "Router transition constant.\r\nRight to left.",
                    "description": "<p>Router transition constant.\nRight to left.</p>\n"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "PageHomeComponent",
                        "data": {
                            "state": "home",
                            "menuItem": {
                                "label": "SoheilSaheb-Jamii",
                                "index": "0"
                            }
                        }
                    },
                    {
                        "path": "contact",
                        "component": "PageContactComponent",
                        "data": {
                            "state": "contact",
                            "menuItem": {
                                "label": "Contact",
                                "index": "1"
                            }
                        }
                    },
                    {
                        "path": "**",
                        "redirectTo": ""
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 32,
        "status": "medium",
        "files": [
            {
                "filePath": "src/app/app-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appRouting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/constants/router-transition.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTER_LTR_TRANSITION_CONSTANT",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/constants/router-transition.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTER_RTL_TRANSITION_CONSTANT",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 62,
                "coverageCount": "5/8",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/main/components/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Layout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/main/main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/main/main.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/main/main.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/page-contact/page-contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/page-home/page-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Profile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/main-storybook-module.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MainStorybookModuleConstant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/circle/circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CircleComponent",
                "coveragePercent": 83,
                "coverageCount": "10/12",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/circle/circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/circle/circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DrawCircleComponent",
                "coveragePercent": 40,
                "coverageCount": "4/10",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DrawCircleCoordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DrawCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/input-circle-slider/input-circle-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputCircleSliderComponent",
                "coveragePercent": 77,
                "coverageCount": "27/35",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CircleSlider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/services/page.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PageService",
                "coveragePercent": 75,
                "coverageCount": "6/8",
                "status": "good"
            },
            {
                "filePath": "src/app/utils/animate-value.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "animateValueUtil",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/utils/ease-in-out-cubic.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "easeInOutCubicUtil",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}