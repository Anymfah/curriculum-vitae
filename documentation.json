{
    "pipes": [],
    "interfaces": [
        {
            "name": "DrawCircleCoordinates",
            "id": "interface-DrawCircleCoordinates-e65e31e27776ff2300ca539c0269538132b0d45865ec60a6f9287eddb671d0ee2b402c81bdba123c4c214c941c0ff9a4f132b3fa689b2c08957b5e51e2abfdd2",
            "file": "src/app/modules/shared/draw-circle/draw-circle.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DrawCircleCoordinates {\n  x: number;\n  y: number;\n}\n\n/**\n * @Inputs Interface for the DrawCircleComponent.\n */\nexport interface iDrawCircle {\n  size?: number;\n  arcDegree?: number;\n  weight?: number;\n  circleWeight?: number;\n  positionDegree?: number;\n  anchorPoint?: 'start' | 'middle' | 'end';\n  showRefCircle?: boolean;\n}\n",
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iCircleMenuItem",
            "id": "interface-iCircleMenuItem-5fdd8746897e4e804db65929ff400ebd0e683d60931409803d88abb36e927caa52373127f626292f2aa58a4cbc47bb87b89db0e8b79c3dc6903c789c3a4dab2e",
            "file": "src/app/modules/main/components/circle-menu-item/circle-menu-item.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface iCircleMenuItem {\r\n  title?: string;\r\n  description?: string;\r\n  size?: number;\r\n  fillPercentage?: number;\r\n  positionDegree?: number;\r\n  weight?: number;\r\n  torque?: number;\r\n  contentOffset?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "contentOffset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fillPercentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "positionDegree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "torque",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "iDrawCircle",
            "id": "interface-iDrawCircle-e65e31e27776ff2300ca539c0269538132b0d45865ec60a6f9287eddb671d0ee2b402c81bdba123c4c214c941c0ff9a4f132b3fa689b2c08957b5e51e2abfdd2",
            "file": "src/app/modules/shared/draw-circle/draw-circle.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DrawCircleCoordinates {\n  x: number;\n  y: number;\n}\n\n/**\n * @Inputs Interface for the DrawCircleComponent.\n */\nexport interface iDrawCircle {\n  size?: number;\n  arcDegree?: number;\n  weight?: number;\n  circleWeight?: number;\n  positionDegree?: number;\n  anchorPoint?: 'start' | 'middle' | 'end';\n  showRefCircle?: boolean;\n}\n",
            "properties": [
                {
                    "name": "anchorPoint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"start\" | \"middle\" | \"end\"",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "arcDegree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "circleWeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "positionDegree",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "showRefCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MenuItem",
            "id": "interface-MenuItem-8bf66f0501ede8df9df726ff1aad7a370c45bf8b8e8e84aa285fa2f768c0cded10adfd8b5f4715aa0eb0d672bab540351cac3d9b31070150acd96248cc6d0d98",
            "file": "src/app/modules/main/components/menu/menu.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MenuItem {\n  label: string;\n  link: string;\n  index: number;\n  active?: boolean;\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Interface of Menu item</p>\n",
            "rawdescription": "\n\nInterface of Menu item\n",
            "methods": []
        },
        {
            "name": "ProfileMenuItemData",
            "id": "interface-ProfileMenuItemData-1a076762f83d369277589e10ce0a3822c9c06ccea8137da205a537f0598a54fac90a939bc5ae01df6cf6d6ea9692b81946dd2795e7f0c80fba71ce80c5e3b805",
            "file": "src/app/modules/main/components/profile/profile.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {iDrawCircle} from \"../../../shared/draw-circle/draw-circle.interface\";\r\nimport {iCircleMenuItem} from \"../circle-menu-item/circle-menu-item.interface\";\r\n\r\n/**\r\n * Interface of a profile menu item data.\r\n * Used by ProfileMenuItem Model.\r\n * @see ProfileMenuItem\r\n */\r\nexport interface ProfileMenuItemData {\r\n  /**\r\n   * Importance of the menu item will be used\r\n   * to calculate the arc degree size of the menu item\r\n   * and the drawn circle between all other menu items.\r\n   */\r\n  importance: number;\r\n  /**\r\n   * Offset for making the importance\r\n   * of the drawn circle bigger or smaller.\r\n   *\r\n   * Changing this will automatically change\r\n   * the next item's offset by adding the missing offset\r\n   * or subtracting the exceeding offset.\r\n   *\r\n   * Unit is in degree, so be carefully with the value you set,\r\n   * or it may break the menu. Recommended value is between -30 and 30.\r\n   *\r\n   * Also notice that the menu will be drawn in a counterclockwise direction.\r\n   */\r\n  offset?: number;\r\n  circleMenuItem: iCircleMenuItem;\r\n  drawCircleItem: iDrawCircle;\r\n  routerLink?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "circleMenuItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iCircleMenuItem",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "drawCircleItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iDrawCircle",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "importance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Importance of the menu item will be used\nto calculate the arc degree size of the menu item\nand the drawn circle between all other menu items.</p>\n",
                    "line": 15,
                    "rawdescription": "\n\nImportance of the menu item will be used\nto calculate the arc degree size of the menu item\nand the drawn circle between all other menu items.\n"
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>Offset for making the importance\nof the drawn circle bigger or smaller.</p>\n<p>Changing this will automatically change\nthe next item&#39;s offset by adding the missing offset\nor subtracting the exceeding offset.</p>\n<p>Unit is in degree, so be carefully with the value you set,\nor it may break the menu. Recommended value is between -30 and 30.</p>\n<p>Also notice that the menu will be drawn in a counterclockwise direction.</p>\n",
                    "line": 29,
                    "rawdescription": "\n\nOffset for making the importance\nof the drawn circle bigger or smaller.\n\nChanging this will automatically change\nthe next item's offset by adding the missing offset\nor subtracting the exceeding offset.\n\nUnit is in degree, so be carefully with the value you set,\nor it may break the menu. Recommended value is between -30 and 30.\n\nAlso notice that the menu will be drawn in a counterclockwise direction.\n"
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Interface of a profile menu item data.\nUsed by ProfileMenuItem Model.\nSee ProfileMenuItem</p>\n",
            "rawdescription": "\n\nInterface of a profile menu item data.\nUsed by ProfileMenuItem Model.\nSee ProfileMenuItem\n",
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PageService",
            "id": "injectable-PageService-3d146ed78b92c05a5abbb8ec44d0ac34b5ce56829017afac6389d77f6e65e05ec3a1a561450296fa21f91a5f14b3891972aac52c3f3c0d26c6120ca5a35f9b7a",
            "file": "src/app/services/page.service.ts",
            "properties": [
                {
                    "name": "_activeItem",
                    "defaultValue": "new BehaviorSubject<MenuItem | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Current active menu item. as BehaviorSubject.</p>\n",
                    "line": 45,
                    "rawdescription": "\n\nCurrent active menu item. as BehaviorSubject.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_items",
                    "defaultValue": "new BehaviorSubject<MenuItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference to the menu items to be displayed. as BehaviorSubject.</p>\n",
                    "line": 35,
                    "rawdescription": "\n\nReference to the menu items to be displayed. as BehaviorSubject.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pageDirection",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The page direction</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nThe page direction\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_pagePanel",
                    "defaultValue": "new BehaviorSubject<MatTabNavPanel | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The tab panel to show the pages as BehaviorSubject.</p>\n",
                    "line": 15,
                    "rawdescription": "\n\nThe tab panel to show the pages as BehaviorSubject.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activeItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": true,
                    "description": "<p>Current active menu item but as MenuItem.</p>\n",
                    "line": 55,
                    "rawdescription": "\n\nCurrent active menu item but as MenuItem.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "activeItem$",
                    "defaultValue": "this._activeItem.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Current active menu item. as Observable.</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nCurrent active menu item. as Observable.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items$",
                    "defaultValue": "this._items.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Reference to the menu items to be displayed. as Observable.</p>\n",
                    "line": 40,
                    "rawdescription": "\n\nReference to the menu items to be displayed. as Observable.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageDirection$",
                    "defaultValue": "this._pageDirection.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The page direction as Observable.</p>\n",
                    "line": 30,
                    "rawdescription": "\n\nThe page direction as Observable.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pagePanel$",
                    "defaultValue": "this._pagePanel.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>The tab panel to show the pages as Observable.</p>\n",
                    "line": 20,
                    "rawdescription": "\n\nThe tab panel to show the pages as Observable.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "_setActiveItemFromUrl",
                    "args": [
                        {
                            "name": "url",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the active item from the current url.\n",
                    "description": "<p>Sets the active item from the current url.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1895,
                                "end": 1898,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "url"
                            },
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1889,
                                "end": 1894,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>If not given, the current url is used.</p>\n"
                        }
                    ]
                },
                {
                    "name": "_setItemsFromRoutes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet Menu items from app routing\n",
                    "description": "<p>Set Menu items from app routing</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "activateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2765,
                                "end": 2769,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2759,
                                "end": 2764,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "MenuItem[]",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "page",
                            "type": "MenuItem | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3592,
                                "end": 3596,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "page"
                            },
                            "type": "MenuItem | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3586,
                                "end": 3591,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>menu item or link to navigate to</p>\n"
                        }
                    ]
                },
                {
                    "name": "setPageDirection",
                    "args": [
                        {
                            "name": "pageDirection",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the page direction.\n",
                    "description": "<p>Sets the page direction.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3219,
                                "end": 3232,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "pageDirection"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3213,
                                "end": 3218,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>true = the clicked item is after the current item.</p>\n"
                        }
                    ]
                },
                {
                    "name": "setPagePanel",
                    "args": [
                        {
                            "name": "pagePanel",
                            "type": "MatTabNavPanel | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the tab panel to show the pages.\n",
                    "description": "<p>Sets the tab panel to show the pages.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3049,
                                "end": 3058,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "pagePanel"
                            },
                            "type": "MatTabNavPanel | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3043,
                                "end": 3048,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {MatTabNavPanel} from \"@angular/material/tabs\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {MenuItem} from \"../modules/main/components/menu/menu.interface\";\nimport {NavigationEnd, Route, Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageService {\n\n  /**\n   * The tab panel to show the pages as BehaviorSubject.\n   */\n  private _pagePanel = new BehaviorSubject<MatTabNavPanel | null>(null);\n\n  /**\n   * The tab panel to show the pages as Observable.\n   */\n  public pagePanel$ = this._pagePanel.asObservable();\n\n  /**\n   * The page direction\n   */\n  private _pageDirection = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The page direction as Observable.\n   */\n  public pageDirection$ = this._pageDirection.asObservable();\n\n  /**\n   * Reference to the menu items to be displayed. as BehaviorSubject.\n   */\n  private _items = new BehaviorSubject<MenuItem[]>([]);\n\n  /**\n   * Reference to the menu items to be displayed. as Observable.\n   */\n  public items$ = this._items.asObservable();\n\n  /**\n   * Current active menu item. as BehaviorSubject.\n   */\n  private _activeItem = new BehaviorSubject<MenuItem | undefined>(undefined);\n\n  /**\n   * Current active menu item. as Observable.\n   */\n  public activeItem$ = this._activeItem.asObservable();\n\n  /**\n   * Current active menu item but as MenuItem.\n   */\n  public activeItem?: MenuItem;\n\n\n  /**\n   * @constructor\n   * @param _router\n   */\n  public constructor(\n    private readonly _router: Router,\n    ) {\n    this._setItemsFromRoutes();\n    /**\n     * Get route\n     */\n    const routerSub = this._router.events.subscribe((route: unknown) => {\n      const navigation = route as NavigationEnd;\n      this._setActiveItemFromUrl(navigation.url);\n      routerSub.unsubscribe();\n    });\n  }\n\n  /**\n   * Sets the active item from the current url.\n   * @param url If not given, the current url is used.\n   */\n  private _setActiveItemFromUrl(url: string | undefined): void {\n    const currentUrl = url ?? this._router.url;\n    const items = this._items.getValue();\n    items.forEach(item => {\n      if (currentUrl === item.link) {\n        this.activateItem(item);\n      }\n    });\n  }\n\n  /**\n   * Set Menu items from app routing\n   */\n  private _setItemsFromRoutes(): void {\n    const items: MenuItem[] = [];\n    this._router.config.forEach((route: Route) => {\n      if (route.data != null && route.data['menuItem'] != null) {\n        items.push({\n          label: route.data['menuItem'].label,\n          link: '/' + route.path,\n          index: route.data['menuItem'].index,\n        });\n      }\n    });\n    this._items.next(items);\n  }\n\n  /**\n   * @method Activate the given menu item. Deactivate all other menu items.\n   * @param item\n   */\n  public activateItem(item: MenuItem): void {\n    this._items.getValue().forEach(menuItem => {\n      menuItem.active = menuItem === item;\n    });\n    this._activeItem.next(item);\n    this.activeItem = item;\n  }\n\n  /**\n   * Sets the tab panel to show the pages.\n   * @param pagePanel\n   */\n  public setPagePanel(pagePanel: MatTabNavPanel | null): void {\n    this._pagePanel.next(pagePanel);\n  }\n\n  /**\n   * Sets the page direction.\n   * @param pageDirection true = the clicked item is after the current item.\n   */\n  public setPageDirection(pageDirection: boolean): void {\n    this._pageDirection.next(pageDirection);\n  }\n\n  /**\n   * @method Get Items\n   */\n  public getItems(): MenuItem[] {\n    return this._items.getValue();\n  }\n\n  /**\n   * @event click on menu item\n   * @method navigate - Page Change\n   * @param page menu item or link to navigate to\n   */\n  public navigate(page: MenuItem | string): void {\n    let item: MenuItem | undefined;\n    if (typeof page === 'string') {\n      item = this._items.getValue().find(menuItem => menuItem.link === page);\n    } else {\n      item = page;\n    }\n    if (item != null) {\n      const activeItemIndex = this._activeItem.getValue()?.index ?? 0;\n      this.activateItem(item);\n      const direction = item.index > activeItemIndex;\n      this.setPageDirection(direction);\n      this._router.navigate([item.link]).then();\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1465,
                            "end": 1472,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1459,
                            "end": 1464,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ProfileMenuItem",
            "id": "class-ProfileMenuItem-5299bc8bc16eafd3cc759f761e6ec30a0877607084895cdf3187805b9ab7606bcc3677493e786475bc81b9ecc4916494affb16861ab440ae6a883d93782fc256",
            "file": "src/app/modules/main/components/profile/profile.component.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {ProfileMenuItemData} from \"./profile.interface\";\r\nimport {iCircleMenuItem} from \"../circle-menu-item/circle-menu-item.interface\";\r\nimport {iDrawCircle} from \"../../../shared/draw-circle/draw-circle.interface\";\r\nimport {ProfileMode} from \"./profile.enum\";\r\n\r\n/**\r\n * Model of a profile menu item.\r\n * Used by ProfileComponent.\r\n * @see ProfileComponent\r\n * @see ProfileMenuItemData\r\n * @see iCircleMenuItem\r\n * @see iDrawCircle\r\n * @see ProfileMode\r\n */\r\nexport class ProfileMenuItem {\r\n\r\n  /**\r\n   * ID of the menu item.\r\n   */\r\n  public id: string;\r\n\r\n  /**\r\n   * Route to the menu item.\r\n   */\r\n  public routerLink?: string;\r\n\r\n  /**\r\n   * Range of degrees of the menu item.\r\n   */\r\n  private _activeRange: { start: number, end: number } = { start: 0, end: 0 };\r\n\r\n  /**\r\n   * Get middle degree of the menu item.\r\n   */\r\n  public get degreeItem(): number {\r\n    return (this._activeRange.start + this._activeRange.end) / 2;\r\n  }\r\n\r\n  /**\r\n   * Is the menu item active.\r\n   */\r\n  public active = false;\r\n\r\n  /**\r\n   * Offset for making the importance\r\n   * of the drawn circle bigger or smaller.\r\n   */\r\n  private _offset: number = 0;\r\n\r\n  /**\r\n   * End in degree of the last menu item.\r\n   */\r\n  public static lastEndDegree: number = 0;\r\n\r\n  /**\r\n   * End in degree of the last drawn circle arc\r\n   */\r\n  public static lastEndDrawCircleDegree: number = 0;\r\n\r\n  /**\r\n   * Get the menu item as circle menu item.\r\n   */\r\n  public circleMenuItem: iCircleMenuItem = {};\r\n\r\n  /**\r\n   * Menu item as circle menu item (initial)\r\n   */\r\n  private _circleMenuItem: iCircleMenuItem = {};\r\n\r\n  /**\r\n   * Get the menu item as drawn circle. (used for button)\r\n   */\r\n  public drawCircleItem: iDrawCircle = {};\r\n\r\n  /**\r\n   * Menu item as drawn circle. (used for button) (initial)\r\n   */\r\n  private _drawCircleItem: iDrawCircle = {};\r\n\r\n  /**\r\n   * @constructor\r\n   */\r\n  public constructor(id: string) {\r\n    this.id = id;\r\n  }\r\n\r\n  /**\r\n   * Set Data\r\n   */\r\n  public setData(data: ProfileMenuItemData, fillPercentage: number): void {\r\n    this._circleMenuItem = {\r\n      ...data.circleMenuItem,\r\n      fillPercentage,\r\n    }\r\n    this.routerLink = data.routerLink;\r\n    this._offset = data.offset ?? 0;\r\n    this._drawCircleItem = data.drawCircleItem;\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Update view values with view mode.\r\n   */\r\n  private _init(): void {\r\n    this.circleMenuItem = {...this._circleMenuItem};\r\n    this._createDrawCircleItem();\r\n    this.circleMenuItem.positionDegree = ProfileMenuItem.lastEndDegree;\r\n\r\n    this._updateLastEndDegree();\r\n    this._setActiveRange();\r\n  }\r\n\r\n  /**\r\n   * Create drawCircleItem position and size from circleMenuItem data\r\n   */\r\n  private _createDrawCircleItem(): void {\r\n    this.drawCircleItem.weight = this._drawCircleItem.weight;\r\n    this.drawCircleItem.size = this._drawCircleItem.size;\r\n    if (ProfileMenuItem.lastEndDrawCircleDegree !== ProfileMenuItem.lastEndDegree) {\r\n      this._offset += ProfileMenuItem.lastEndDegree - ProfileMenuItem.lastEndDrawCircleDegree;\r\n    }\r\n    if (this.circleMenuItem.fillPercentage != null) {\r\n      this.drawCircleItem.arcDegree = this.circleMenuItem.fillPercentage * 3.6 + this._offset;\r\n    }\r\n    this.drawCircleItem.positionDegree = ProfileMenuItem.lastEndDrawCircleDegree;\r\n  }\r\n\r\n  /**\r\n   * Update the last end degree. (used for next menu item)\r\n   * Add the fill percentage (to deg) + 2deg (gap)\r\n   */\r\n  private _updateLastEndDegree() {\r\n    if (this.circleMenuItem.fillPercentage !== undefined) {\r\n      ProfileMenuItem.lastEndDegree += this.circleMenuItem.fillPercentage * 3.6 + 2;\r\n    }\r\n    if (this.drawCircleItem.arcDegree !== undefined) {\r\n      ProfileMenuItem.lastEndDrawCircleDegree += this.drawCircleItem.arcDegree + 2;\r\n    }\r\n  }\r\n\r\n  private _setActiveRange() :void {\r\n    this._activeRange = {\r\n      start: this.drawCircleItem.positionDegree ?? 0,\r\n      end: ProfileMenuItem.lastEndDrawCircleDegree,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if value is in the active range.\r\n   */\r\n  public isActive(value: number): void {\r\n\r\n    if (this._activeRange.start < 0 && this._activeRange.end < 0) {\r\n      const reversedValue = -Math.abs(360 - value);\r\n      this.active =\r\n        reversedValue >= this._activeRange.start &&\r\n        reversedValue <= this._activeRange.end;\r\n    } else if (this._activeRange.start < 0) {\r\n      const reversedValue = 360 - value;\r\n      this.active =\r\n        reversedValue <= Math.abs(this._activeRange.start) ||\r\n        value <= this._activeRange.end;\r\n    } else if (this._activeRange.end > 360) {\r\n      this.active = value >= this._activeRange.start && value <= this._activeRange.end - 360;\r\n    } else {\r\n      this.active = value >= this._activeRange.start && value <= this._activeRange.end;\r\n    }\r\n    //this.active = value >= this._activeRange.start && value <= this._activeRange.end;\r\n  }\r\n\r\n  /**\r\n   * @method Change lastEndDegree value from outside.\r\n   */\r\n  public static setLastEndDegree(value: number): void {\r\n    ProfileMenuItem.lastEndDegree = value;\r\n    ProfileMenuItem.lastEndDrawCircleDegree = value;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 78,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_activeRange",
                    "defaultValue": "{ start: 0, end: 0 }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>Range of degrees of the menu item.</p>\n",
                    "line": 30,
                    "rawdescription": "\n\nRange of degrees of the menu item.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_circleMenuItem",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iCircleMenuItem",
                    "optional": false,
                    "description": "<p>Menu item as circle menu item (initial)</p>\n",
                    "line": 68,
                    "rawdescription": "\n\nMenu item as circle menu item (initial)\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_drawCircleItem",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iDrawCircle",
                    "optional": false,
                    "description": "<p>Menu item as drawn circle. (used for button) (initial)</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nMenu item as drawn circle. (used for button) (initial)\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_offset",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Offset for making the importance\nof the drawn circle bigger or smaller.</p>\n",
                    "line": 48,
                    "rawdescription": "\n\nOffset for making the importance\nof the drawn circle bigger or smaller.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Is the menu item active.</p>\n",
                    "line": 42,
                    "rawdescription": "\n\nIs the menu item active.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "circleMenuItem",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iCircleMenuItem",
                    "optional": false,
                    "description": "<p>Get the menu item as circle menu item.</p>\n",
                    "line": 63,
                    "rawdescription": "\n\nGet the menu item as circle menu item.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "drawCircleItem",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "iDrawCircle",
                    "optional": false,
                    "description": "<p>Get the menu item as drawn circle. (used for button)</p>\n",
                    "line": 73,
                    "rawdescription": "\n\nGet the menu item as drawn circle. (used for button)\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>ID of the menu item.</p>\n",
                    "line": 20,
                    "rawdescription": "\n\nID of the menu item.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lastEndDegree",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>End in degree of the last menu item.</p>\n",
                    "line": 53,
                    "rawdescription": "\n\nEnd in degree of the last menu item.\n",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "lastEndDrawCircleDegree",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>End in degree of the last drawn circle arc</p>\n",
                    "line": 58,
                    "rawdescription": "\n\nEnd in degree of the last drawn circle arc\n",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Route to the menu item.</p>\n",
                    "line": 25,
                    "rawdescription": "\n\nRoute to the menu item.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "description": "<p>Model of a profile menu item.\nUsed by ProfileComponent.\nSee ProfileComponent\nSee ProfileMenuItemData\nSee iCircleMenuItem\nSee iDrawCircle\nSee ProfileMode</p>\n",
            "rawdescription": "\n\nModel of a profile menu item.\nUsed by ProfileComponent.\nSee ProfileComponent\nSee ProfileMenuItemData\nSee iCircleMenuItem\nSee iDrawCircle\nSee ProfileMode\n",
            "methods": [
                {
                    "name": "_createDrawCircleItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate drawCircleItem position and size from circleMenuItem data\n",
                    "description": "<p>Create drawCircleItem position and size from circleMenuItem data</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate view values with view mode.\n",
                    "description": "<p>Update view values with view mode.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setActiveRange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_updateLastEndDegree",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the last end degree. (used for next menu item)\nAdd the fill percentage (to deg) + 2deg (gap)\n",
                    "description": "<p>Update the last end degree. (used for next menu item)\nAdd the fill percentage (to deg) + 2deg (gap)</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isActive",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCheck if value is in the active range.\n",
                    "description": "<p>Check if value is in the active range.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setData",
                    "args": [
                        {
                            "name": "data",
                            "type": "ProfileMenuItemData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fillPercentage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet Data\n",
                    "description": "<p>Set Data</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "ProfileMenuItemData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fillPercentage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLastEndDegree",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "degreeItem": {
                    "name": "degreeItem",
                    "getSignature": {
                        "name": "degreeItem",
                        "type": "number",
                        "returnType": "number",
                        "line": 35,
                        "rawdescription": "\n\nGet middle degree of the menu item.\n",
                        "description": "<p>Get middle degree of the menu item.</p>\n"
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-99123493909ec051af4c5b257e26d80d5859a0ea90161d0176a8fa0b01c7c8353b14fa5bb7ce587e2897be37d06d0aee3399f608eea7571861a10c68a96bc6f9",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'curriculum-vitae'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public title = 'curriculum-vitae';\n  constructor() {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<cv-layout></cv-layout>\n\n"
        },
        {
            "name": "BlockComponent",
            "id": "component-BlockComponent-9a9feb82923d525937def9c502c00e15807ccd457d534b797c76da67ff04d3cf85ffd3764c7c9eb0d046ae744d22fc89e7bd63be2b3e70770df88fef948ba5ed",
            "file": "src/app/modules/main/components/block/block.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-block",
            "styleUrls": [
                "./block.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./block.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-block',\n  templateUrl: './block.component.html',\n  styleUrls: ['./block.component.scss']\n})\nexport class BlockComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.block {\r\n  &__header {\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./block.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n<div class=\"block__header\">Titre du block</div>\n<div class=\"block__content\">\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid animi dolorem minima mollitia repellendus totam, voluptatum? Assumenda, cumque debitis, facilis molestias nam nulla pariatur possimus quos rem sequi temporibus, voluptate.\n</div>\n"
        },
        {
            "name": "CircleComponent",
            "id": "component-CircleComponent-f41ba0ab58200befaa8fe2111dbcc8ae20b83fbaec535a3cee778cfb76f0680a72404930c952a390d30808289cfa9f5d89226755fd00b0fa3d0190f52e3e68dc",
            "file": "src/app/modules/shared/circle/circle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-circle",
            "styleUrls": [
                "./circle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./circle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "baseWeight",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBase Weight of the circle line.\n",
                    "description": "<p>Base Weight of the circle line.</p>\n",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "fillPercentage",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1579,
                            "end": 1747,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1580,
                                "end": 1591,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "description"
                            },
                            "comment": "<p>0% is the top of the circle.\nYou can change the start point with the [startAt] input.\nYou can reverse the direction with the [reverse] input.</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nFill percentage of the track bar.\nYou can change the start point with the [startAt] input.\nYou can reverse the direction with the [reverse] input.\n",
                    "description": "<p>Fill percentage of the track bar.\nYou can change the start point with the [startAt] input.\nYou can reverse the direction with the [reverse] input.</p>\n",
                    "line": 64,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "reverse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReversed direction of the track bar.\n",
                    "description": "<p>Reversed direction of the track bar.</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle.\n",
                    "description": "<p>Size of the circle.</p>\n",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "startAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1859,
                            "end": 1923,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1860,
                                "end": 1871,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "description"
                            },
                            "comment": "<p>0% is the top of the circle and 50% the bottom.</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nStart point of the track bar as percentage.\n",
                    "description": "<p>Start point of the track bar as percentage.</p>\n",
                    "line": 70,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "startAtDegree",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 2019,
                            "end": 2088,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 2020,
                                "end": 2031,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "description"
                            },
                            "comment": "<p>0deg is the top of the circle and 180deg the bottom.</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nStart point of the track bar as degree.\n",
                    "description": "<p>Start point of the track bar as degree.</p>\n",
                    "line": 76,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight of the circle line (can be animated).\n",
                    "description": "<p>Weight of the circle line (can be animated).</p>\n",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weightDirection",
                    "defaultValue": "'in'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight direction.\n",
                    "description": "<p>Weight direction.</p>\n",
                    "line": 56,
                    "type": "\"in\" | \"out\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "trackBarMask",
                    "defaultValue": "`radial-gradient(circle at center, transparent 0, transparent 98px, black 98px)`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>track bar mask for the circle.\nSee _drawSize()</p>\n",
                    "line": 98,
                    "rawdescription": "\n\ntrack bar mask for the circle.\nSee _drawSize()\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 2498,
                            "end": 2518,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 344,
                            "tagName": {
                                "pos": 2499,
                                "end": 2502,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "see"
                            },
                            "comment": "<p>()</p>\n",
                            "name": {
                                "pos": 2503,
                                "end": 2512,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 308,
                                "name": {
                                    "pos": 2503,
                                    "end": 2512,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "_drawSize"
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "trackBarMaskInner",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>track bar fill for the circle.\nSee _drawTrackCircle()</p>\n",
                    "line": 104,
                    "rawdescription": "\n\ntrack bar fill for the circle.\nSee _drawTrackCircle()\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 2675,
                            "end": 2702,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 344,
                            "tagName": {
                                "pos": 2676,
                                "end": 2679,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "see"
                            },
                            "comment": "<p>()</p>\n",
                            "name": {
                                "pos": 2680,
                                "end": 2696,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 308,
                                "name": {
                                    "pos": 2680,
                                    "end": 2696,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "_drawTrackCircle"
                                }
                            }
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_drawSize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDraw the size of the circle.\n",
                    "description": "<p>Draw the size of the circle.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "_drawTrackCircle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDraw the inner track bar.\n",
                    "description": "<p>Draw the inner track bar.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Circle Component\nThe circle can be displayed in different sizes, also it can be filled with a percentage.</p>\n<ul>\n<li>You can change color of the track circle from css by\noverriding the --track-bar-color variable.</li>\n<li>You can change color of the track bar from css by\noverriding the --track-bar-bg-color variable.</li>\n</ul>\n<div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;cv-circle [size]=&quot;200&quot; [weight]=&quot;10&quot;&gt;&lt;/cv-circle&gt;</code></pre></div>",
            "rawdescription": "\n\nCircle Component\nThe circle can be displayed in different sizes, also it can be filled with a percentage.\n\n   - You can change color of the track circle from css by\n     overriding the --track-bar-color variable.\n   - You can change color of the track bar from css by\n     overriding the --track-bar-bg-color variable.\n```html\n<cv-circle [size]=\"200\" [weight]=\"10\"></cv-circle>\n```",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\n/**\n * @author Soheil Saheb-Jamii\n * @since 2022-12-25\n * Circle Component\n * @description This component is used to display a circle.\n * The circle can be displayed in different sizes, also it can be filled with a percentage.\n *\n * @exception\n *    - You can change color of the track circle from css by\n *      overriding the --track-bar-color variable.\n *    - You can change color of the track bar from css by\n *      overriding the --track-bar-bg-color variable.\n * @example\n * <cv-circle [size]=\"200\" [weight]=\"10\"></cv-circle>\n */\n@Component({\n  selector: 'cv-circle',\n  templateUrl: './circle.component.html',\n  styleUrls: ['./circle.component.scss']\n})\nexport class CircleComponent implements OnChanges, OnInit {\n\n  /**\n   * Size of the circle.\n   */\n  @Input() public size: number = 200;\n\n  /**\n   * Base Weight of the circle line.\n   */\n  @Input() public baseWeight: number = 10;\n\n  /**\n   * Size render of the circle\n   */\n  public get sizeRender(): number {\n    return this.weightDirection === 'out' ? this.size + this.weight : this.size;\n  }\n\n  /**\n   * Size render of the container of the circle.\n   */\n  public get containerSizeRender(): number {\n    return this.weightDirection === 'out' ? this.size + this.baseWeight : this.size;\n  }\n\n  /**\n   * Weight of the circle line (can be animated).\n   */\n  @Input() public weight: number = 10;\n\n  /**\n   * Weight direction.\n   */\n  @Input() public weightDirection: 'in' | 'out' = 'in';\n\n  /**\n   * Fill percentage of the track bar.\n   * @description 0% is the top of the circle.\n   * You can change the start point with the [startAt] input.\n   * You can reverse the direction with the [reverse] input.\n   */\n  @Input() public fillPercentage: number = 100;\n\n  /**\n   * Start point of the track bar as percentage.\n   * @description 0% is the top of the circle and 50% the bottom.\n   */\n  @Input() public startAt?: number;\n\n  /**\n   * Start point of the track bar as degree.\n   * @description 0deg is the top of the circle and 180deg the bottom.\n   */\n  @Input() public startAtDegree: number = 0;\n\n  /**\n   * Get start point of the track bar as degree.\n   */\n  private get _startAtDegree(): number {\n    if (this.startAt != null) {\n      return this.startAt * 3.6;\n    } else {\n      return this.startAtDegree;\n    }\n  }\n\n  /**\n   * Reversed direction of the track bar.\n   */\n  @Input() public reverse = false;\n\n  /**\n   * track bar mask for the circle.\n   * @see _drawSize()\n   */\n  public trackBarMask = `radial-gradient(circle at center, transparent 0, transparent 98px, black 98px)`;\n\n  /**\n   * track bar fill for the circle.\n   * @see _drawTrackCircle()\n   */\n  public trackBarMaskInner = '';\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    if ('fillPercentage' in changes\n      || 'startAt' in changes\n      || 'startAtDegree' in changes\n      || 'reverse' in changes) {\n      this._drawTrackCircle();\n    }\n\n    if ('size' in changes\n      || 'weight' in changes\n      || 'weightDirection' in changes) {\n      this._drawSize();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit() {\n    this._drawSize();\n    this._drawTrackCircle();\n  }\n\n  /**\n   * @event ngOnChanges\n   * @event ngOnInit\n   * Draw the inner track bar.\n   */\n  private _drawTrackCircle() {\n    if (!this.reverse) {\n      this.trackBarMaskInner = `conic-gradient(\n        from ${this._startAtDegree}deg,\n        black ${this.fillPercentage}%,\n        transparent ${this.fillPercentage}%\n        )`;\n    } else {\n      // Reverse the direction (will start with empty to filled)\n      const emptyPercentage = 100 - this.fillPercentage;\n      this.trackBarMaskInner = `conic-gradient(\n        from ${360 - this._startAtDegree}deg,\n        transparent ${emptyPercentage}%,\n        black ${emptyPercentage}%\n        )`;\n    }\n  }\n\n  /**\n   * @event ngOnChanges\n   * @event ngOnInit\n   * Draw the size of the circle.\n   */\n  private _drawSize() {\n    const radius = this.size / 2;\n    const weight = this.weightDirection === 'in' ? this.weight : 0;\n    this.trackBarMask = `radial-gradient(circle at center, transparent 0, transparent ${radius - weight}px, black ${radius - this.weight}px)`;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'mixins';\r\n\r\n:host {\r\n  .circle {\r\n    &__container {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    &__wrapper {\r\n      position: relative;\r\n    }\r\n\r\n    &__inner {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    &__content {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    &__track {\r\n      &-bar {\r\n        @include mixins.transition;\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        border-radius: 50%;\r\n        background: var(--circle--track-bar-bg-color);\r\n\r\n        &--inner {\r\n          width: 100%;\r\n          height: 100%;\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          border-radius: 50%;\r\n\r\n          .mask-inner-wrapper {\r\n            width: 100%;\r\n            height: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n          }\r\n        }\r\n\r\n        &--bg {\r\n          @include mixins.transition;\r\n\r\n          width: 100%;\r\n          height: 100%;\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          border-radius: 50%;\r\n\r\n          // Can be overridden\r\n          background: var(--circle--track-bar-color);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./circle.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "accessors": {
                "sizeRender": {
                    "name": "sizeRender",
                    "getSignature": {
                        "name": "sizeRender",
                        "type": "number",
                        "returnType": "number",
                        "line": 37,
                        "rawdescription": "\n\nSize render of the circle\n",
                        "description": "<p>Size render of the circle</p>\n"
                    }
                },
                "containerSizeRender": {
                    "name": "containerSizeRender",
                    "getSignature": {
                        "name": "containerSizeRender",
                        "type": "number",
                        "returnType": "number",
                        "line": 44,
                        "rawdescription": "\n\nSize render of the container of the circle.\n",
                        "description": "<p>Size render of the container of the circle.</p>\n"
                    }
                },
                "_startAtDegree": {
                    "name": "_startAtDegree",
                    "getSignature": {
                        "name": "_startAtDegree",
                        "type": "number",
                        "returnType": "number",
                        "line": 81,
                        "rawdescription": "\n\nGet start point of the track bar as degree.\n",
                        "description": "<p>Get start point of the track bar as degree.</p>\n"
                    }
                }
            },
            "templateData": "<div class=\"circle__container\"\n     [style.width.px]=\"containerSizeRender\"\n     [style.height.px]=\"containerSizeRender\">\n  <div class=\"circle__wrapper\" [style.width.px]=\"sizeRender\"\n       [style.height.px]=\"sizeRender\">\n    <div #circle class=\"circle__inner\">\n\n      <div class=\"circle__track-bar\"\n           [style.-webkit-mask]=\"trackBarMask\"\n      >\n        <div class=\"circle__track-bar--inner\"\n             [style.-webkit-mask]=\"trackBarMaskInner\">\n          <div class=\"circle__track-bar--bg bg-cone\"></div>\n          <div class=\"mask-inner-wrapper\">\n            <ng-content select=\"[mask-inner]\"></ng-content>\n          </div>\n        </div>\n        <ng-content select=\"[mask]\"></ng-content>\n      </div>\n    </div>\n    <div class=\"circle__content\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n\n"
        },
        {
            "name": "CircleMenuItemComponent",
            "id": "component-CircleMenuItemComponent-f4dbff6077f6556a934049ecdbe69094baae1eceffd673930b53d1cacac6e09d7e2f6fa31926cd2a57c48fe9d3fe1a4e073e0d8f2de0907ad983b50f7aec00a5",
            "file": "src/app/modules/main/components/circle-menu-item/circle-menu-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-circle-menu-item",
            "styleUrls": [
                "./circle-menu-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./circle-menu-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActivate the circle menu item\nadd active class.\n",
                    "description": "<p>Activate the circle menu item\nadd active class.</p>\n",
                    "line": 89,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "contentOffset",
                    "defaultValue": "75",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDistance of the content box from the edge of the circle arc.\n",
                    "description": "<p>Distance of the content box from the edge of the circle arc.</p>\n",
                    "line": 72,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "description",
                    "defaultValue": "'Lorem ipsum dolor sit amet'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDescription of the menu item.\n",
                    "description": "<p>Description of the menu item.</p>\n",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fillPercentage",
                    "defaultValue": "30",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFill percentage of the circle arc\n",
                    "description": "<p>Fill percentage of the circle arc</p>\n",
                    "line": 50,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "positionDegree",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPosition of the circle arc.\n",
                    "description": "<p>Position of the circle arc.</p>\n",
                    "line": 55,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "310",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle diameter.\n",
                    "description": "<p>Size of the circle diameter.</p>\n",
                    "line": 45,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'Some Title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTitle of the menu item.\n",
                    "description": "<p>Title of the menu item.</p>\n",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "torque",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTorque in degrees of the starting point for the\ncontent box position.\nDefault is 0. Range is -180 to 180.\n",
                    "description": "<p>Torque in degrees of the starting point for the\ncontent box position.\nDefault is 0. Range is -180 to 180.</p>\n",
                    "line": 67,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "80",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMax Weight\n",
                    "description": "<p>Max Weight</p>\n",
                    "line": 60,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contentPosition",
                    "defaultValue": "{x: 0, y: 0}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>Position of the content box.\nSame as swgWrapperPosition but with 50px offset.</p>\n",
                    "line": 95,
                    "rawdescription": "\n\nPosition of the content box.\nSame as swgWrapperPosition but with 50px offset.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "contentSide",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"right\"",
                    "optional": false,
                    "description": "<p>Add left or right class to the content box.\nleft if the content box is on the left side of the circle arc.\nright if the content box is on the right side of the circle arc.</p>\n",
                    "line": 102,
                    "rawdescription": "\n\nAdd left or right class to the content box.\nleft if the content box is on the left side of the circle arc.\nright if the content box is on the right side of the circle arc.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "svgWrapperPosition",
                    "defaultValue": "{x: 0, y: 0}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>Position in percentage from top left corner of the\ncircle wrapper.</p>\n",
                    "line": 78,
                    "rawdescription": "\n\nPosition in percentage from top left corner of the\ncircle wrapper.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "svgWrapperRotate",
                    "defaultValue": "'rotate(0deg)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Rotate angle of the svg wrapper.</p>\n",
                    "line": 83,
                    "rawdescription": "\n\nRotate angle of the svg wrapper.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "weightValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_animateWeight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_calculateStrokesPoints",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the position points of the stroke\nline of the circle arc to the content box.\n",
                    "description": "<p>Calculate the position points of the stroke\nline of the circle arc to the content box.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_old_animateWeight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {animateValueUtil} from \"../../../../utils/animate-value.util\";\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\nimport {delay} from \"rxjs\";\n\n@Component({\n  selector: 'cv-circle-menu-item',\n  templateUrl: './circle-menu-item.component.html',\n  styleUrls: ['./circle-menu-item.component.scss'],\n  animations: [\n    trigger('activeWidthAnimation',[\n      state('active',\n        style({\n        width: '{{width}}',\n        }),\n        {params: {width: '100px'}}\n      ),\n      state('inactive',\n        style({\n          width: 0,\n        }),\n      ),\n      transition('inactive => active', animate('200ms cubic-bezier(.28,0,0,1)')),\n      transition('active => inactive', animate('70ms 30ms cubic-bezier(.28,0,0,1)')),\n    ])\n  ]\n})\nexport class CircleMenuItemComponent implements OnChanges, OnInit {\n\n  /**\n   * Title of the menu item.\n   */\n  @Input() public title: string = 'Some Title';\n\n  /**\n   * Description of the menu item.\n   */\n  @Input() public description: string = 'Lorem ipsum dolor sit amet';\n\n  public weightValue = 0;\n\n  /**\n   * Size of the circle diameter.\n   */\n  @Input() public size = 310;\n\n  /**\n   * Fill percentage of the circle arc\n   */\n  @Input() public fillPercentage: number = 30;\n\n  /**\n   * Position of the circle arc.\n   */\n  @Input() public positionDegree: number = 0;\n\n  /**\n   * Max Weight\n   */\n  @Input() public weight: number = 80;\n\n  /**\n   * Torque in degrees of the starting point for the\n   * content box position.\n   * Default is 0. Range is -180 to 180.\n   */\n  @Input() public torque = 0;\n\n  /**\n   * Distance of the content box from the edge of the circle arc.\n   */\n  @Input() public contentOffset = 75;\n\n  /**\n   * Position in percentage from top left corner of the\n   * circle wrapper.\n   */\n  public svgWrapperPosition: { x: number, y: number } = {x: 0, y: 0};\n\n  /**\n   * Rotate angle of the svg wrapper.\n   */\n  public svgWrapperRotate: string = 'rotate(0deg)';\n\n  /**\n   * Activate the circle menu item\n   * add active class.\n   */\n  @HostBinding('class.active') @Input() public active = true;\n\n  /**\n   * Position of the content box.\n   * Same as swgWrapperPosition but with 50px offset.\n   */\n  public contentPosition : { x: number, y: number } = {x: 0, y: 0};\n\n  /**\n   * Add left or right class to the content box.\n   * left if the content box is on the left side of the circle arc.\n   * right if the content box is on the right side of the circle arc.\n   */\n  public contentSide: 'left' | 'right' = 'left';\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    this._calculateStrokesPoints();\n  }\n\n  /**\n   * Calculate the position points of the stroke\n   * line of the circle arc to the content box.\n   */\n  private _calculateStrokesPoints(): void {\n    const fillDegree = this.fillPercentage / 100 * 360;\n    const arcCenterAngle = (this.positionDegree + fillDegree / 2) - 90 + this.torque;\n    this.svgWrapperRotate = `rotate(${-arcCenterAngle - 180}deg)`;\n\n    /**\n     * Calculate svgWrapperPosition\n     * x is the distance in % between the left side of the\n     * circle wrapper and center of the circle arc.\n     * y is the distance in % between the top side of the\n     * circle wrapper and center of the circle arc.\n     */\n    /** Formula: x = cos(angle) * radius */\n    const x = Math.cos(arcCenterAngle * Math.PI / 180) * 50;\n    /** Formula: y = sin(angle) * radius */\n    const y = Math.sin(arcCenterAngle * Math.PI / 180) * 50;\n\n    // Reverse x and add 50% to x and y to get the position\n    this.svgWrapperPosition = {x:100 - (x + 50), y: y + 50};\n\n    /**\n     * Must calculate the offset radius to get the correct position of the content box.\n     * The size of the circle is in px and the contentOffset is in px.\n     * But the position of the content box is in %.\n     * So we need to calculate the offset radius in %.\n     * The offset radius is the radius of the circle arc + the contentOffset.\n     */\n    const halfSize = (this.size + this.weight) / 2;\n    const offsetRadius = (halfSize + this.contentOffset) / halfSize * 50;\n    const contentX = Math.cos(arcCenterAngle * Math.PI / 180) * offsetRadius;\n    const contentY = Math.sin(arcCenterAngle * Math.PI / 180) * offsetRadius;\n    this.contentPosition = {\n      x: 100 - (contentX + 50),\n      y: contentY + 50\n    }\n\n    /** Set the content side class. */\n    this.contentSide = arcCenterAngle > 90 && arcCenterAngle <= 270 ? 'right' : 'left';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if ('active' in changes) {\n      this._animateWeight();\n    }\n\n    if ('maxWeight' in changes) {\n      this.weightValue = this.active ? this.weight : 0;\n    }\n\n    if ('positionDegree' in changes || 'fillPercentage' in changes\n      || 'torque' in changes  ||'contentOffset' in changes) {\n      this._calculateStrokesPoints();\n    }\n  }\n\n  private _old_animateWeight(): void {\n    const from = this.active ? 0 : this.weight;\n    const to = this.active ? this.weight : 0;\n    animateValueUtil((value: number) => {\n      this.weightValue = value;\n    }, from, to, 300);\n  }\n\n  private _animateWeight(): void {\n    const from = this.active ? 0 : this.weight;\n    const to = this.active ? this.weight : 0;\n    const ease = this.active ?\n      [.29,0,0,1] as [number, number, number, number]\n      : [.49,0,.85,.89] as [number, number, number, number];\n    animateValueUtil((value: number) => {\n      this.weightValue = value;\n    }, from, to, 300, ease);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n@use 'mixins';\r\n\r\n:host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  --circle--track-bar-color: conic-gradient(from 0deg,\r\n    #{fn.get-color(primary, 600)} 30deg,\r\n    #{fn.get-color(primary, 800)} 180deg,\r\n    #{fn.get-color(primary, 600)} 330deg);\r\n}\r\n\r\n.circle-menu-item {\r\n  &__content {\r\n    width: 0;\r\n    height: 0;\r\n    position: absolute;\r\n    &-wrapper {\r\n      color: fn.get-color(primary, 50);\r\n      width: 150px;\r\n      position: absolute;\r\n      text-align: left;\r\n      top: 0;\r\n\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        width: 0;\r\n        height: 1px;\r\n        box-shadow: 0 0.6px 0.8px fn.get-color(primary, 600);\r\n        background: fn.get-color(primary, 600);\r\n        @include mixins.transition(.07s, $delay: 0s);\r\n\r\n        @at-root :host.active & {\r\n          @include mixins.transition(.4s, $delay: .2s);\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      &.left {\r\n        right: 0;\r\n        &:before {\r\n          right: 0;\r\n        }\r\n\r\n        .title, .description {\r\n          padding-right: 25px;\r\n          transform: translateX(25px);\r\n        }\r\n      }\r\n\r\n      &.right {\r\n        left: 0;\r\n        &:before {\r\n          left: 0;\r\n        }\r\n\r\n        .title, .description {\r\n          padding-left: 10px;\r\n          transform: translateX(-25px);\r\n        }\r\n      }\r\n    }\r\n\r\n      .title, .description {\r\n        @include mixins.transition(.1s, $delay: 0s);\r\n        opacity: 0;\r\n\r\n        @at-root :host.active & {\r\n          @include mixins.transition(.5s, $delay: .2s);\r\n          opacity: 1;\r\n          transform: translateX(0);\r\n        }\r\n      }\r\n\r\n      .description {\r\n        @at-root :host.active & {\r\n          transition-delay: .35s;\r\n        }\r\n      }\r\n\r\n    &__title {\r\n      margin-top: -35px;\r\n    }\r\n  }\r\n\r\n  &__svg-wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 2px;\r\n    background: fn.get-color(primary, 600);\r\n    transform-origin: left center;\r\n  }\r\n}\r\n",
                    "styleUrl": "./circle-menu-item.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "<div class=\"cicle-menu-item__container\">\n  <cv-circle [size]=\"size\"\n             [weight]=\"weightValue\"\n             [baseWeight]=\"80\"\n             [fillPercentage]=\"fillPercentage\"\n             [startAtDegree]=\"positionDegree\"\n             [reverse]=\"true\"\n             weightDirection=\"out\">\n    <div class=\"circle-menu-item__svg-wrapper\"\n         [@activeWidthAnimation]=\"active ? {value: 'active', params: {width: contentOffset + 'px'}} : {value: 'inactive'}\"\n         [style.width.px]=\"contentOffset\"\n         [style.transform]=\"svgWrapperRotate\"\n         [style.left.%]=\"svgWrapperPosition.x\"\n         [style.top.%]=\"svgWrapperPosition.y\">\n    </div>\n    <div class=\"circle-menu-item__content\"\n         [style.top.%]=\"contentPosition.y\"\n         [style.left.%]=\"contentPosition.x\"\n    >\n      <div class=\"circle-menu-item__content-wrapper\" [ngClass]=\"contentSide\">\n        <div class=\"circle-menu-item__content__title title h4\">{{title}}</div>\n        <div class=\"circle-menu-item__content__description description cv-small mat-caption\">\n          {{description}}\n        </div>\n      </div>\n\n    </div>\n  </cv-circle>\n</div>\n\n"
        },
        {
            "name": "DrawCircleComponent",
            "id": "component-DrawCircleComponent-59c21dc0488eb5251e010a2c9fbd8f0bb6495c854ca8f9c1b40bfc143f5d05e3a1b26878dda1b8be0f1c3a85467768cdf8f3b197c017c4fb91e8e2266fc28523",
            "file": "src/app/modules/shared/draw-circle/draw-circle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-draw-circle",
            "styleUrls": [
                "./draw-circle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./draw-circle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "anchorPoint",
                    "defaultValue": "'middle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPosition of anchor point of the arc.\n",
                    "description": "<p>Position of anchor point of the arc.</p>\n",
                    "line": 41,
                    "type": "\"start\" | \"middle\" | \"end\"",
                    "decorators": []
                },
                {
                    "name": "arcDegree",
                    "defaultValue": "120",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDegree of the circle.\n360 is a full circle.\n",
                    "description": "<p>Degree of the circle.\n360 is a full circle.</p>\n",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "circleWeight",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight of the circle\n",
                    "description": "<p>Weight of the circle</p>\n",
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "positionDegree",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPosition of the center the arc.\n0 = top, 90 = right, 180 = bottom, 270 = left.\n",
                    "description": "<p>Position of the center the arc.\n0 = top, 90 = right, 180 = bottom, 270 = left.</p>\n",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "reverse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReverse the position degree calculation.\n",
                    "description": "<p>Reverse the position degree calculation.</p>\n",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showRefCircle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow full circle.\n",
                    "description": "<p>Show full circle.</p>\n",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle.\n",
                    "description": "<p>Size of the circle.</p>\n",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight of the arc.\n",
                    "description": "<p>Weight of the arc.</p>\n",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "leftArc",
                    "defaultValue": "{x: 0, y: 0}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DrawCircleCoordinates",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rightArc",
                    "defaultValue": "{x: 0, y: 0}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DrawCircleCoordinates",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "viewBoxSize",
                    "defaultValue": "120",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_draw",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDraw or update the arc.\n",
                    "description": "<p>Draw or update the arc.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_polarToCartesian",
                    "args": [
                        {
                            "name": "centerX",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "centerY",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "radius",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "angleInDegrees",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DrawCircleCoordinates",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the Cartesian coordinates of the point on the circle\nwith the given angle and radius from the center.\n",
                    "description": "<p>Calculate the Cartesian coordinates of the point on the circle\nwith the given angle and radius from the center.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2794,
                                "end": 2801,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "centerX"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2788,
                                "end": 2793,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>X coordinate of the center of the circle.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2856,
                                "end": 2863,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "centerY"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2850,
                                "end": 2855,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Y coordinate of the center of the circle.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2918,
                                "end": 2924,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "radius"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2912,
                                "end": 2917,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Radius of the circle.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2959,
                                "end": 2973,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "angleInDegrees"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2953,
                                "end": 2958,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Angle in degrees.</p>\n"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {DrawCircleCoordinates} from \"./draw-circle.interface\";\n\n@Component({\n  selector: 'cv-draw-circle',\n  templateUrl: './draw-circle.component.html',\n  styleUrls: ['./draw-circle.component.scss']\n})\nexport class DrawCircleComponent implements OnInit, OnChanges {\n\n  /**\n   * Degree of the circle.\n   * 360 is a full circle.\n   */\n  @Input() public arcDegree: number = 120;\n\n  /**\n   * Size of the circle.\n   */\n  @Input() public size: number = 300;\n\n  /**\n   * Weight of the arc.\n   */\n  @Input() public weight: number = 10;\n\n  /**\n   * Weight of the circle\n   */\n  @Input() public circleWeight: number = 1;\n\n  /**\n   * Position of the center the arc.\n   * 0 = top, 90 = right, 180 = bottom, 270 = left.\n   */\n  @Input() public positionDegree: number = 0;\n\n  /**\n   * Position of anchor point of the arc.\n   */\n  @Input() public anchorPoint: 'start' | 'middle' | 'end' = 'middle';\n\n  /**\n   * Show full circle.\n   */\n  @Input() public showRefCircle: boolean = false;\n\n  /**\n   * Reverse the position degree calculation.\n   */\n  @Input() public reverse: boolean = false;\n\n  public viewBoxSize = 120;\n\n  /**\n   * Percentage of the circle.\n   * 100 is a full circle.\n   */\n  public get arcPercentage(): number {\n    return this.arcDegree / 360 * 100;\n  }\n\n  public leftArc: DrawCircleCoordinates = {x: 0, y: 0};\n\n  public rightArc: DrawCircleCoordinates = {x: 0, y: 0};\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit() {\n    this._draw();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    if ('size' in changes\n      || 'reverse' in changes\n      || 'arcDegree' in changes\n      || 'positionDegree' in changes\n      || 'anchorPoint' in changes) {\n      this._draw();\n    }\n  }\n\n  /**\n   * Draw or update the arc.\n   */\n  private _draw() {\n    if (this.arcDegree >= 360) {\n      this.arcDegree = 359.999;\n    }\n    let center = 60;\n    let radius = 50;\n    const arcSize = ((100 - this.arcPercentage) / 100) * 180;\n    // Calculate the position of the arc.\n    let position = this.positionDegree;\n    if (this.anchorPoint === 'middle') {\n      position += 90;\n    } else if (this.anchorPoint === 'start') {\n      position -= 90 + arcSize;\n    } else if (this.anchorPoint === 'end') {\n      position -= 90 - arcSize;\n    }\n\n    if (this.reverse) {\n      position = 180 - position;\n    }\n\n    const startAngle = -arcSize + position;\n    const endAngle = arcSize + position;\n\n\n    this.leftArc = this._polarToCartesian(center, center, radius, startAngle);\n    this.rightArc = this._polarToCartesian(center, center, radius, endAngle);\n  }\n\n  /**\n   * Calculate the Cartesian coordinates of the point on the circle\n   * with the given angle and radius from the center.\n   * @param centerX X coordinate of the center of the circle.\n   * @param centerY Y coordinate of the center of the circle.\n   * @param radius Radius of the circle.\n   * @param angleInDegrees Angle in degrees.\n   */\n  private _polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number): DrawCircleCoordinates {\n    const angleInRadians = angleInDegrees * Math.PI / 180.0;\n\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'mixins';\r\n\r\n:host {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.circle {\r\n  @include mixins.transition;\r\n  fill: var(--draw-circle--track-bar-bg-color);\r\n  stroke: var(--draw-circle--track-bar-color);\r\n  stroke-width: 1;\r\n  pointer-events: var(--draw-circle--arc-pointer-events);\r\n}\r\n.inCircle {\r\n  fill: var(--draw-circle--full-bg-color);\r\n  stroke: var(--draw-circle--full-color);\r\n  stroke-width: 1;\r\n  pointer-events: none;\r\n}\r\n",
                    "styleUrl": "./draw-circle.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "arcPercentage": {
                    "name": "arcPercentage",
                    "getSignature": {
                        "name": "arcPercentage",
                        "type": "number",
                        "returnType": "number",
                        "line": 59,
                        "rawdescription": "\n\nPercentage of the circle.\n100 is a full circle.\n",
                        "description": "<p>Percentage of the circle.\n100 is a full circle.</p>\n"
                    }
                }
            },
            "templateData": "<svg xmlns=\"http://www.w3.org/2000/svg\"\n     [attr.viewBox]=\"'00 00 ' + viewBoxSize + ' ' + viewBoxSize\" preserveAspectRatio=\"xMidYMid\" class=\"circleContainer\"\n     [style.width.px]=\"size\" [style.height.px]=\"size\">\n  <circle *ngIf=\"showRefCircle\" [style.stroke-width]=\"circleWeight\" [attr.cx]=\"60\" [attr.cy]=\"60\" [attr.r]=\"54\" class=\"inCircle\">\n  </circle>\n  <path class=\"circle\"\n        [style.stroke-width]=\"weight\"\n        [attr.d]=\"'M ' +leftArc.x+', ' + leftArc.y +\n        ' A 50 50 0 ' + (arcPercentage > 50 ? 1 : 0) + ' 0 ' + rightArc.x + ', ' + rightArc.y\"\n  >\n  </path>\n</svg>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-d198456e0fa300c1299f6cf45f8dffa776d51b6d77bc66e60cec2fa8dafd2e5b57b9b5a2ff8fdadaab840c941d650ef482e280517456ef0dd9e06a4ab2575883",
            "file": "src/app/modules/main/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'config';\r\n:host {\r\n  height: config.$top-header--height;\r\n  > mat-toolbar {\r\n    padding: 0;\r\n    height: 100%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar class=\"bg-transparent\">\n  <cv-menu></cv-menu>\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n    <mat-icon>share</mat-icon>\n  </button>\n</mat-toolbar>\n"
        },
        {
            "name": "InputCircleSliderComponent",
            "id": "component-InputCircleSliderComponent-df8edcbe349c899c35ae7bd7294575f2fb53bab80f874dbec779eb1f4718b134d45ef1da8317e6874c4bf92eb905c74d44b2e6e030d6b63363e1edb78a8d8ecb",
            "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputCircleSliderComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "cv-input-circle-slider",
            "styleUrls": [
                "./input-circle-slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-circle-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowCross",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow to drag the handle through the min and max values.\n",
                    "description": "<p>Allow to drag the handle through the min and max values.</p>\n",
                    "line": 87,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "animate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimate the value\n",
                    "description": "<p>Animate the value</p>\n",
                    "line": 97,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "animationCurve",
                    "defaultValue": "[.43, .02, .04, 1]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimation curve\n",
                    "description": "<p>Animation curve</p>\n",
                    "line": 107,
                    "type": "[number, number, number, number]",
                    "decorators": []
                },
                {
                    "name": "animationTime",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimation time\n",
                    "description": "<p>Animation time</p>\n",
                    "line": 102,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "draggable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAllow drag.\n",
                    "description": "<p>Allow drag.</p>\n",
                    "line": 92,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMaximum value of the slider.\n",
                    "description": "<p>Maximum value of the slider.</p>\n",
                    "line": 77,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMinimum value of the slider.\n",
                    "description": "<p>Minimum value of the slider.</p>\n",
                    "line": 72,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow value\n",
                    "description": "<p>Show value</p>\n",
                    "line": 112,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSize of the circle.\n",
                    "description": "<p>Size of the circle.</p>\n",
                    "line": 62,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "0.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStep value.\n",
                    "description": "<p>Step value.</p>\n",
                    "line": 82,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "unit",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUnit\n",
                    "description": "<p>Unit</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1093,
                            "end": 1259,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1094,
                                "end": 1100,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "access"
                            },
                            "comment": "<p>ControlValueAccessor\nor ngModel directive\nor [(ngModel)]=&quot;value&quot;\nor [ngModel]=&quot;value&quot;\nor [value]=&quot;value&quot;</p>\n"
                        },
                        {
                            "pos": 1259,
                            "end": 1313,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1260,
                                "end": 1267,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<p>Value is 0\nMain value of the slider.</p>\n"
                        }
                    ],
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "valueDigits",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValue digits after the decimal point.\n",
                    "description": "<p>Value digits after the decimal point.</p>\n",
                    "line": 117,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWeight of the circle line.\n",
                    "description": "<p>Weight of the circle line.</p>\n",
                    "line": 67,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "triggerDragging",
                    "defaultValue": "new EventEmitter<number>",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUser is dragging the handle.\n",
                    "description": "<p>User is dragging the handle.</p>\n",
                    "line": 127,
                    "type": "EventEmitter"
                },
                {
                    "name": "triggerDragStart",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUser started dragging the handle.\n",
                    "description": "<p>User started dragging the handle.</p>\n",
                    "line": 122,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_activeQuarters",
                    "defaultValue": "{\n    first: false,\n    middle: false,\n    last: false,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "<p>Invoked method when the slider is dragged.</p>\n",
                    "line": 147,
                    "rawdescription": "\n\nInvoked method when the slider is dragged.\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_circleRect",
                    "defaultValue": "new DOMRect()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DOMRect",
                    "optional": false,
                    "description": "<p>Circle Rect</p>\n",
                    "line": 172,
                    "rawdescription": "\n\nCircle Rect\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "circle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "<p>Circle Dom element.</p>\n",
                    "line": 57,
                    "rawdescription": "\n\nCircle Dom element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'circle'"
                        }
                    ]
                },
                {
                    "name": "isDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>User is currently dragging the handle.</p>\n",
                    "line": 167,
                    "rawdescription": "\n\nUser is currently dragging the handle.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Invoked when the model has been changed</p>\n",
                    "line": 317,
                    "rawdescription": "\n\nInvoked when the model has been changed\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_calculateAngle",
                    "args": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "y",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the angle of the handle.\n",
                    "description": "<p>Calculate the angle of the handle.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "y",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_calculateValueFromAngle",
                    "args": [
                        {
                            "name": "angle",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate value from angle.\n",
                    "description": "<p>Calculate value from angle.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "angle",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_preventCross",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 280,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPrevent the handle to go over the min and max values.\nListen to the activated quarters to know where the handle comes from.\n",
                    "description": "<p>Prevent the handle to go over the min and max values.\nListen to the activated quarters to know where the handle comes from.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6299,
                                "end": 6304,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6293,
                                "end": 6298,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "_updateQuarters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 225,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the active quarters from current value.\nThis is needed to constraint the handle to pass through all quarters of the circle.\nSee allowCross\n\nWhen sliding, update activated quarters.\n",
                    "description": "<p>Calculate the active quarters from current value.\nThis is needed to constraint the handle to pass through all quarters of the circle.\nSee allowCross</p>\n<p>When sliding, update activated quarters.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "drag",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 246,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMoving the handle.\n",
                    "description": "<p>Moving the handle.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 328,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "startDrag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStart dragging the handle.\n",
                    "description": "<p>Start dragging the handle.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "stopDrag",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nStop dragging the handle.\n",
                    "description": "<p>Stop dragging the handle.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "updateChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInvoked method when value changes.\n",
                    "description": "<p>Invoked method when value changes.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 339,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7582,
                                "end": 7587,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7576,
                                "end": 7581,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Input Circle Slider Component\nWorks with the ngModel directive\nUses the controlValueAccessor interface to work with the ngModel directive</p>\n<div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;input-circle-slider [(ngModel)]=&quot;value&quot;&gt;&lt;/input-circle-slider&gt;\n```html\n&lt;input-circle-slider [(ngModel)]=&quot;value&quot; [min]=&quot;0&quot; [max]=&quot;100&quot; [step]=&quot;1&quot;&gt;&lt;/input-circle-slider&gt;</code></pre></div>",
            "rawdescription": "\n\nInput Circle Slider Component\nWorks with the ngModel directive\nUses the controlValueAccessor interface to work with the ngModel directive\n```html\n<input-circle-slider [(ngModel)]=\"value\"></input-circle-slider>\n```html\n<input-circle-slider [(ngModel)]=\"value\" [min]=\"0\" [max]=\"100\" [step]=\"1\"></input-circle-slider>\n```",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef, EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit, Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {animateValueUtil} from \"../../../utils/animate-value.util\";\n\n/**\n * Input Circle Slider Component\n * Works with the ngModel directive\n * Uses the controlValueAccessor interface to work with the ngModel directive\n * @example\n * <input-circle-slider [(ngModel)]=\"value\"></input-circle-slider>\n * @example\n * <input-circle-slider [(ngModel)]=\"value\" [min]=\"0\" [max]=\"100\" [step]=\"1\"></input-circle-slider>\n */\n@Component({\n  selector: 'cv-input-circle-slider',\n  templateUrl: './input-circle-slider.component.html',\n  styleUrls: ['./input-circle-slider.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputCircleSliderComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputCircleSliderComponent implements OnInit, AfterViewInit, OnChanges, ControlValueAccessor {\n\n  /**\n   * @access ControlValueAccessor\n   *        or ngModel directive\n   *        or [(ngModel)]=\"value\"\n   *        or [ngModel]=\"value\"\n   *        or [value]=\"value\"\n   * @default Value is 0\n   * Main value of the slider.\n   */\n  @Input() public value: number = 0;\n\n  /**\n   * Unit\n   */\n  @Input() public unit: string = '';\n\n  /**\n   * Circle Dom element.\n   */\n  @ViewChild('circle') circle: ElementRef | undefined;\n\n  /**\n   * Size of the circle.\n   */\n  @Input() public size: number = 200;\n\n  /**\n   * Weight of the circle line.\n   */\n  @Input() public weight: number = 10;\n\n  /**\n   * Minimum value of the slider.\n   */\n  @Input() public min: number = 0;\n\n  /**\n   * Maximum value of the slider.\n   */\n  @Input() public max: number = 100;\n\n  /**\n   * Step value.\n   */\n  @Input() public step: number = 0.1;\n\n  /**\n   * Allow to drag the handle through the min and max values.\n   */\n  @Input() public allowCross: boolean = false;\n\n  /**\n   * Allow drag.\n   */\n  @Input() public draggable: boolean = true;\n\n  /**\n   * Animate the value\n   */\n  @Input() public animate: boolean = true;\n\n  /**\n   * Animation time\n   */\n  @Input() public animationTime: number = 1000;\n\n  /**\n   * Animation curve\n   */\n  @Input() public animationCurve: [number, number, number, number] = [.43, .02, .04, 1];\n\n  /**\n   * Show value\n   */\n  @Input() public showValue: boolean = true;\n\n  /**\n   * Value digits after the decimal point.\n   */\n  @Input() public valueDigits = 0;\n\n  /**\n   * User started dragging the handle.\n   */\n  @Output() public triggerDragStart = new EventEmitter<number>();\n\n  /**\n   * User is dragging the handle.\n   */\n  @Output() public triggerDragging = new EventEmitter<number>;\n\n  /**\n   * Value as percentage.\n   */\n  public get valuePercentage(): number {\n    return this.value * 100 / this.max;\n  }\n\n  /**\n   * Formatted value.\n   */\n  public get formattedValue(): string {\n    const digits = this.valueDigits > 0 ? this.valueDigits : 0;\n    return this.value.toFixed(digits);\n  }\n\n  /**\n   * Invoked method when the slider is dragged.\n   */\n  private _activeQuarters: {\n    first: boolean,\n    middle: boolean,\n    last: boolean\n  } = {\n    first: false,\n    middle: false,\n    last: false,\n  }\n\n  /**\n   * The transform value as string of the rotation for the handle.\n   */\n\n  public get handleTransform(): string {\n    return `rotate(${this.valuePercentage * 3.6}deg)`;\n  }\n  /**\n   * User is currently dragging the handle.\n   */\n  public isDragging = false;\n\n  /**\n   * Circle Rect\n   */\n  private _circleRect: DOMRect = new DOMRect();\n\n  /**\n   * @constructor\n   */\n  public constructor() {}\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    this._updateQuarters();\n    if (this.animate) {\n      // Animate the value from 0 to the current value in 1 second.\n      animateValueUtil((value) => {\n        this.value = value;\n      },0, this.value, this.animationTime, this.animationCurve);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges) {\n    if ('size' in changes || 'weight' in changes) {\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngAfterViewInit(): void {\n  }\n\n  /**\n   * @event mousedown\n   * Start dragging the handle.\n   */\n  public startDrag(): void {\n    if (this.draggable) {\n      this.triggerDragStart.emit(this.value);\n      this.isDragging = true;\n      this._updateQuarters();\n    }\n  }\n\n  /**\n   * Calculate the active quarters from current value.\n   * This is needed to constraint the handle to pass through all quarters of the circle.\n   * @see allowCross\n   *\n   * When sliding, update activated quarters.\n   */\n  private _updateQuarters(): void {\n    this._activeQuarters = {\n      first: this.value >= this.max / 4,\n      // Can also be middle: this.value >= this.max / 2;\n      middle: this.value >= this.max / 4 && this.value <= (this.max / 4) * 3,\n      last: this.value > (this.max / 4) * 3,\n    }\n  }\n\n  /**\n   * @event mouseup\n   * Stop dragging the handle.\n   */\n  public stopDrag(): void {\n    this.isDragging = false;\n  }\n\n  /**\n   * @event mousemove\n   * Moving the handle.\n   */\n  public drag(event: MouseEvent): void {\n    if (this.isDragging && this.circle != null) {\n      const circle = this.circle.nativeElement;\n      this._circleRect = circle.getBoundingClientRect();\n\n      const x = event.clientX - this._circleRect.left;\n      const y = event.clientY - this._circleRect.top;\n      const angle = this._calculateAngle(x, y);\n      let value = this._calculateValueFromAngle(angle);\n\n      /**\n       * If the cross is not allowed, we need to prevent the handle to go over the min and max values.\n       * Need to check where the handle comes from.\n       * The value should never jump from min to max or max to min.\n       */\n      if (!this.allowCross) {\n        this._updateQuarters();\n        value = this._preventCross(value);\n      }\n\n      // Round the value to the nearest step\n      value = Math.round(value / this.step) * this.step;\n\n      this.writeValue(value);\n      this.triggerDragging.emit(value);\n      this.updateChanges();\n    }\n  }\n\n  /**\n   * Prevent the handle to go over the min and max values.\n   * Listen to the activated quarters to know where the handle comes from.\n   * @param value\n   */\n  private _preventCross(value: number): number {\n\n    // Can't pass from max to min\n    if (this._activeQuarters.last && value < (this.max / 4) * 3) {\n      value = this.max;\n    }\n\n    // Can't pass from min to max\n    else if (!this._activeQuarters.first && value > this.max / 4) {\n      value = this.min;\n    }\n    return  value;\n  }\n\n  /**\n   * Calculate the angle of the handle.\n   */\n  private _calculateAngle(x: number, y: number): number {\n    let angle = Math.atan2(y - this.size / 2, x - this.size / 2) * 180 / Math.PI + 90;\n    // Prevent the handle to go over the 0°\n    if (angle < 0) {\n      angle = 360 + angle;\n    }\n\n    return angle;\n  }\n\n  /**\n   * Calculate value from angle.\n   */\n  private _calculateValueFromAngle(angle: number): number {\n    return angle * (this.max - this.min) / 360 + this.min;\n  }\n\n  /**\n   * Invoked when the model has been changed\n   */\n  public onChange: (_: any) => void = (_: any) => {};\n\n  /**\n   * Invoked method when value changes.\n   */\n  public updateChanges(): void {\n    if (typeof this.onChange === 'function') {\n      this.onChange(this.value);\n    }\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n  }\n\n  /**\n   * @event input\n   * @param value\n   */\n  public writeValue(value: number): void {\n    this.value = value;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n:host {\r\n  display: flex;\r\n}\r\n\r\n.input-circle-slider {\r\n  &__container {\r\n    position: relative;\r\n  }\r\n\r\n  &__ol {\r\n    height: 100vh;\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 999999;\r\n    display: flex;\r\n    pointer-events: auto;\r\n  }\r\n\r\n  &__circle {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 50%;\r\n\r\n    &__value {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      color: #fff;\r\n\r\n      .value {\r\n        font-size: 2rem;\r\n        font-weight: 700;\r\n      }\r\n\r\n      .unit {\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        margin-left: 0.2rem;\r\n      }\r\n    }\r\n\r\n    &__track {\r\n      &-handle {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 50%;\r\n        width: 0;\r\n        height: 50%;\r\n\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: center;\r\n        transform-origin: center bottom;\r\n        pointer-events: none;\r\n\r\n        .handler {\r\n          cursor: pointer;\r\n          position: absolute;\r\n          bottom: calc(100% - 20px);\r\n          left: calc(50% - 15px);\r\n          width: 30px;\r\n          height: 30px;\r\n          border-radius: 50%;\r\n          background: var(--input-circle-slider--handler-color);\r\n          display: flex;\r\n          z-index: 30;\r\n          pointer-events: var(--input-circle-slider--handler-pointer-events);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./input-circle-slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 172,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": []
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges",
                "ControlValueAccessor"
            ],
            "accessors": {
                "valuePercentage": {
                    "name": "valuePercentage",
                    "getSignature": {
                        "name": "valuePercentage",
                        "type": "number",
                        "returnType": "number",
                        "line": 132,
                        "rawdescription": "\n\nValue as percentage.\n",
                        "description": "<p>Value as percentage.</p>\n"
                    }
                },
                "formattedValue": {
                    "name": "formattedValue",
                    "getSignature": {
                        "name": "formattedValue",
                        "type": "string",
                        "returnType": "string",
                        "line": 139,
                        "rawdescription": "\n\nFormatted value.\n",
                        "description": "<p>Formatted value.</p>\n"
                    }
                },
                "handleTransform": {
                    "name": "handleTransform",
                    "getSignature": {
                        "name": "handleTransform",
                        "type": "string",
                        "returnType": "string",
                        "line": 161,
                        "rawdescription": "\n\nThe transform value as string of the rotation for the handle.\n",
                        "description": "<p>The transform value as string of the rotation for the handle.</p>\n"
                    }
                }
            },
            "templateData": "<div class=\"input-circle-slider__container\"\n     [style.width.px]=\"size\"\n     [style.height.px]=\"size\"\n>\n  <div #circle class=\"input-circle-slider__circle\">\n    <cv-circle [size]=\"size\" [weight]=\"weight\" [fillPercentage]=\"valuePercentage\"></cv-circle>\n    <div *ngIf=\"showValue\" class=\"input-circle-slider__circle__value\">\n      <span class=\"value\">{{formattedValue}}</span>\n      <span *ngIf=\"unit != null\" class=\"unit\">{{unit}}</span>\n    </div>\n    <div class=\"input-circle-slider__circle__track-handle\"\n      [style.transform]=\"handleTransform\"\n      >\n      <div class=\"handler\" (mousedown)=\"startDrag()\">\n\n        <!--Insert content for custom handle here-->\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"isDragging === true\" (mouseup)=\"stopDrag()\" (mousemove)=\"drag($event)\"\n     class=\"input-circle-slider__ol\"></div>\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-c37d79de777512a38552859d3df4702974aaa8bb5a7a1e395a53e48932a5847eac315d6779cf10b8eba2e976d2c995753fcf6ede6841587ccd73d2838a682cea",
            "file": "src/app/modules/main/components/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ltrState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Left to right state (for animation).</p>\n",
                    "line": 30,
                    "rawdescription": "\nLeft to right state (for animation).",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menu",
                    "defaultValue": "[\n    {\n      label: 'Home',\n      link: '/',\n      index: 0,\n    },\n    {\n      label: 'About me',\n      link: '/about-me',\n      index: 1,\n    },\n    {\n      label: 'Contact',\n      link: '/contact',\n      index: 2,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "<p>Menu items</p>\n",
                    "line": 39,
                    "rawdescription": "\n\nMenu items\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1047,
                            "end": 1080,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 1048,
                                "end": 1052,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "todo"
                            },
                            "comment": "<p>: Move to routing module</p>\n"
                        }
                    ]
                },
                {
                    "name": "routerOutlet",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RouterOutlet",
                    "optional": true,
                    "description": "<p>Router outlet DOM Element.</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nRouter outlet DOM Element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "RouterOutlet"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rtlState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Right to left state (for animation).</p>\n",
                    "line": 33,
                    "rawdescription": "\nRight to left state (for animation).",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTabNavPanel",
                    "optional": true,
                    "description": "<p>Tab panel DOM Element.</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nTab panel DOM Element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tabPanel'"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RouterOutlet} from \"@angular/router\";\nimport {\n  ROUTER_LTR_TRANSITION_CONSTANT,\n  ROUTER_RTL_TRANSITION_CONSTANT,\n} from \"../../../../constants/router-transition.constant\";\nimport {PageService} from \"../../../../services/page.service\";\nimport {MatTabNavPanel} from \"@angular/material/tabs\";\nimport {MenuItem} from \"../menu/menu.interface\";\n\n@Component({\n  selector: 'cv-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  animations: [ROUTER_RTL_TRANSITION_CONSTANT, ROUTER_LTR_TRANSITION_CONSTANT]\n})\nexport class LayoutComponent implements OnInit {\n\n  /**\n   * Router outlet DOM Element.\n   */\n  @ViewChild(RouterOutlet) public routerOutlet?: RouterOutlet;\n\n  /**\n   * Tab panel DOM Element.\n   */\n  @ViewChild('tabPanel') public tabPanel?: MatTabNavPanel;\n\n  /** Left to right state (for animation). */\n  public ltrState = false;\n\n  /** Right to left state (for animation). */\n  public rtlState = false;\n\n  /**\n   * Menu items\n   * @todo: Move to routing module\n   */\n  public menu: MenuItem[] = [\n    {\n      label: 'Home',\n      link: '/',\n      index: 0,\n    },\n    {\n      label: 'About me',\n      link: '/about-me',\n      index: 1,\n    },\n    {\n      label: 'Contact',\n      link: '/contact',\n      index: 2,\n    },\n  ];\n\n  /**\n   * @constructor\n   * @param _pageService\n   */\n  public constructor(\n    private readonly _pageService: PageService,\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    /** Set the tab panel to show the pages. */\n    if (this.tabPanel != null) {\n      this._pageService.setPagePanel(this.tabPanel);\n    }\n\n    /** Get the direction of page change. */\n    this._pageService.pageDirection$.subscribe(direction => {\n      direction ? this.ltrState = !this.ltrState : this.rtlState = !this.rtlState;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n\r\n:host {\r\n  background: fn.get-color(contrast, 800);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  > mat-tab-nav-panel {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n\r\n    > main {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n\r\ncv-profile {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_pageService",
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1378,
                            "end": 1390,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_pageService"
                        },
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1372,
                            "end": 1377,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<cv-header></cv-header>\n<mat-tab-nav-panel #tabPanel>\n  <cv-profile></cv-profile>\n  <main [@routerTransitionRtL]=\"rtlState\"\n        [@routerTransitionLtR]=\"ltrState\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </main>\n</mat-tab-nav-panel>\n\n"
        },
        {
            "name": "MainComponent",
            "id": "component-MainComponent-82e734913a19973b9f67061244b5c0aa78d24112a5ecbfb8f0c9da3221075505a8e966f487e80b553d2f40601c60d73ac86624a4d31313f9ddd8207d2b86f360",
            "file": "src/app/modules/main/components/main/main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-main",
            "styleUrls": [
                "./main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cv-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./main.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<cv-layout></cv-layout>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-f8adec384e307ff980676f03ce099529f521e0885d9bebee344c8f9a8c32c5f919f06d2d781923694a66a2135a05c4bf1a1cf49024ad4951d5168a308b7c97a3",
            "file": "src/app/modules/main/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem",
                    "optional": true,
                    "description": "<p>Current active menu item.</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nCurrent active menu item.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "<p>Reference to the menu items to be displayed.</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nReference to the menu items to be displayed.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tabPanel",
                    "defaultValue": "new MatTabNavPanel()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Content Panel DOM Element.</p>\n",
                    "line": 17,
                    "rawdescription": "\n\nContent Panel DOM Element.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_activateItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActivate the given item. Deactivate all other items.\n",
                    "description": "<p>Activate the given item. Deactivate all other items.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2300,
                                "end": 2304,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2294,
                                "end": 2299,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "_setActiveItemFromPageService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nListen to page service activeItem$ and set the active item.\n",
                    "description": "<p>Listen to page service activeItem$ and set the active item.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_setItemsFromPageService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nListen to page service items$ and set the items.\n",
                    "description": "<p>Listen to page service items$ and set the items.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "onClicked",
                    "args": [
                        {
                            "name": "item",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNavigate to the given link.\n",
                    "description": "<p>Navigate to the given link.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2127,
                                "end": 2131,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2121,
                                "end": 2126,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, NgZone, OnInit} from '@angular/core';\nimport {MatTabNavPanel} from \"@angular/material/tabs\";\nimport {PageService} from \"../../../../services/page.service\";\nimport {Router} from \"@angular/router\";\nimport {MenuItem} from \"./menu.interface\";\n\n@Component({\n  selector: 'cv-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  /**\n   * Content Panel DOM Element.\n   */\n  public tabPanel = new MatTabNavPanel();\n\n  /**\n   * Reference to the menu items to be displayed.\n   */\n  public items: MenuItem[] = [];\n\n  /**\n   * Current active menu item.\n   */\n  public activeItem?: MenuItem;\n\n  /**\n   * @constructor\n   * @param _pageService\n   * @param _router\n   * @param _ngZone\n   */\n  public constructor(\n    private readonly _pageService: PageService,\n    private readonly _router: Router,\n    private readonly _ngZone: NgZone,\n  ) {\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnInit(): void {\n    /**\n     * Get the tab panel to show the pages.\n     */\n    this._pageService.pagePanel$.subscribe(pagePanel => {\n      if (pagePanel != null) {\n        this.tabPanel = pagePanel;\n      }\n    });\n\n    this._setItemsFromPageService();\n    this._setActiveItemFromPageService();\n  }\n\n  /**\n   * Listen to page service items$ and set the items.\n   */\n  private _setItemsFromPageService(): void {\n    this._pageService.items$.subscribe(items => {\n      this.items = items;\n      this._ngZone.run(() => {\n        this.activeItem = this.items.find(item => item.link ===  this._router.url);\n        if (this.activeItem != null) {\n          this._activateItem(this.activeItem);\n        }\n      });\n    });\n  }\n\n  /**\n   * Listen to page service activeItem$ and set the active item.\n   */\n  private _setActiveItemFromPageService(): void {\n    this._pageService.activeItem$.subscribe(item => {\n      if (item != null) {\n        this.activeItem = item;\n        this._activateItem(item);\n        this.items = this._pageService.getItems();\n      }\n    });\n  }\n\n  /**\n   * @event click on menu item\n   * Navigate to the given link.\n   * @param item\n   */\n  public onClicked(item: MenuItem): void {\n    this._pageService.navigate(item);\n  }\n\n  /**\n   * Activate the given item. Deactivate all other items.\n   * @param item\n   */\n  private _activateItem(item: MenuItem): void {\n    this.items.filter(menuItem => menuItem !== item).forEach(menuItem => menuItem.active = false);\n    item.active = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_pageService",
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 720,
                            "end": 732,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_pageService"
                        },
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 714,
                            "end": 719,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 745,
                            "end": 752,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 739,
                            "end": 744,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 765,
                            "end": 772,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_ngZone"
                        },
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 759,
                            "end": 764,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n  <div mat-tab-link *ngFor=\"let item of items\"\n       [id]=\"'mat-tab-link-' + item.index\"\n       (click)=\"onClicked(item)\"\n       [active]=\"activeItem === item\">\n    <span>{{item.label}}</span>\n  </div>\n</nav>\n"
        },
        {
            "name": "PageContactComponent",
            "id": "component-PageContactComponent-c7d365c18e55aadca33cc99ab823ef15ce16d3da4a445cb7df2c9d946269d775b0596de22bd2308a258dfd2cdaecf248052406720eac0a51c2bf0bde79ef65c7",
            "file": "src/app/modules/main/components/page-contact/page-contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-page-contact",
            "styleUrls": [
                "./page-contact.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-contact.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-page-contact',\n  templateUrl: './page-contact.component.html',\n  styleUrls: ['./page-contact.component.scss']\n})\nexport class PageContactComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-contact.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>page-contact works!</p>\n"
        },
        {
            "name": "PageHomeComponent",
            "id": "component-PageHomeComponent-f7f6486b0ae7c6a7c32596bb38aeddeaf6e204598c92e83479c17e3545e46cbe0e57e45e3f235c34f331115fc6e6cd72f520e38d242e291d8bc6543892b507d5",
            "file": "src/app/modules/main/components/page-home/page-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-page-home",
            "styleUrls": [
                "./page-home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cvPageClass",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.cv-page'"
                        }
                    ],
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.cv-page",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "true",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding} from '@angular/core';\n\n@Component({\n  selector: 'cv-page-home',\n  templateUrl: './page-home.component.html',\n  styleUrls: ['./page-home.component.scss']\n})\nexport class PageHomeComponent {\n\n  @HostBinding('class.cv-page') public readonly cvPageClass = true;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n\r\n\r\n",
                    "styleUrl": "./page-home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<cv-page-wrapper>\n  Page Home Works\n</cv-page-wrapper>\n"
        },
        {
            "name": "PageWrapperComponent",
            "id": "component-PageWrapperComponent-132027ae2ec285d4a137d86bd0f7f8c3c9415960c0aaebbf126ab60f4ed2160fd9a3581599c97f114d858935bfebbba50ff5a67fe92ea2e61936979db9836dff",
            "file": "src/app/modules/shared/page-wrapper/page-wrapper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-page-wrapper",
            "styleUrls": [
                "./page-wrapper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-wrapper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cv-page-wrapper',\n  templateUrl: './page-wrapper.component.html',\n  styleUrls: ['./page-wrapper.component.scss']\n})\nexport class PageWrapperComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./page-wrapper.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-content></ng-content>\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-369685a486c0c52556ff011eae0768635cfa63e852e6aa3411f7e22976dfef0aba3c1a18f1d2d519874d01816dd01fb8941da4a794e7ebb3795d03343101014f",
            "file": "src/app/modules/main/components/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "viewMode",
                    "defaultValue": "ProfileMode.LARGE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nViewMode : Large or Small\n",
                    "description": "<p>ViewMode : Large or Small</p>\n",
                    "line": 27,
                    "type": "ProfileMode",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_isInitialized",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Initialized ?</p>\n",
                    "line": 60,
                    "rawdescription": "\n\nInitialized ?\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_stopAnimation",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Stop the animation of the Input value</p>\n",
                    "line": 55,
                    "rawdescription": "\nStop the animation of the Input value",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "menuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfileMenuItem[]",
                    "optional": false,
                    "description": "<p>Get the menu items.</p>\n",
                    "line": 52,
                    "rawdescription": "\n\nGet the menu items.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuItemsData",
                    "defaultValue": "PROFILE_CONSTANT.MENU_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfileMenuItemData[]",
                    "optional": false,
                    "description": "<p>Data Of the menu items</p>\n",
                    "line": 43,
                    "rawdescription": "\n\nData Of the menu items\n",
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "outerCircleVal",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Outer circle fill percentage.\nUsefully for animations.</p>\n",
                    "line": 38,
                    "rawdescription": "\n\nOuter circle fill percentage.\nUsefully for animations.\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showImage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Show profile image</p>\n",
                    "line": 48,
                    "rawdescription": "\n\nShow profile image\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "-360",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Value between 0 and 360.</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nValue between 0 and 360.\n",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_animateLoad",
                    "args": [
                        {
                            "name": "item",
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAnimate the Input value and circles at first load.\n",
                    "description": "<p>Animate the Input value and circles at first load.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2675,
                                "end": 2679,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2669,
                                "end": 2674,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The menu item for moving the cursor to.</p>\n"
                        }
                    ]
                },
                {
                    "name": "_calculateActiveMenuItem",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet the active menu item.\n",
                    "description": "<p>Set the active menu item.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_calculateMenuItems",
                    "args": [
                        {
                            "name": "mode",
                            "type": "\"create\" | \"update\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'create'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the menu items to get the fill percentages\nand the degree of the menu items for the current mode.\n",
                    "description": "<p>Calculate the menu items to get the fill percentages\nand the degree of the menu items for the current mode.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "\"create\" | \"update\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'create'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_getMaxFillPercentage",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet Max fill percentage for mode.\n100%\n- (360° - (dead arc circle is (start + end) / 3.6))\n- (2.1 % gap between items)\n",
                    "description": "<p>Get Max fill percentage for mode.\n100%</p>\n<ul>\n<li>(360° - (dead arc circle is (start + end) / 3.6))</li>\n<li>(2.1 % gap between items)</li>\n</ul>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "_getMenuItemByRouterLink",
                    "args": [
                        {
                            "name": "routerLink",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ProfileMenuItem | undefined",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet Menu item by router link.\n",
                    "description": "<p>Get Menu item by router link.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "routerLink",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_getTotalImportance",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet total importance of the menu items.\nWe need this to calculate the fill percentage of the menu items.\n",
                    "description": "<p>Get total importance of the menu items.\nWe need this to calculate the fill percentage of the menu items.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_moveMenuCursorToItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMove the menu cursor to the clicked menu item.\n",
                    "description": "<p>Move the menu cursor to the clicked menu item.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6630,
                                "end": 6634,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "item"
                            },
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6624,
                                "end": 6629,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The clicked menu item.</p>\n"
                        }
                    ]
                },
                {
                    "name": "_toggleActiveMenuItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 262,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle active menu item.\n",
                    "description": "<p>Toggle active menu item.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_updateMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange the mode of the profile.\n",
                    "description": "<p>Change the mode of the profile.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": []
                },
                {
                    "name": "onClickMenuItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 237,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActivate the menu item.\n",
                    "description": "<p>Activate the menu item.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ProfileMenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDragStart",
                    "args": [
                        {
                            "name": "$event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5708,
                                "end": 5714,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "$event"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5702,
                                "end": 5707,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Value of the dragging.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onTriggerDragging",
                    "args": [
                        {
                            "name": "$event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 5867,
                                "end": 5873,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "$event"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 5861,
                                "end": 5866,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Value of the dragging.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport {animateValueUtil} from \"../../../../utils/animate-value.util\";\nimport {ProfileMenuItem} from \"./profile.component.model\";\nimport {PROFILE_CONSTANT} from \"./profile.constant\";\nimport {ProfileMenuItemData} from \"./profile.interface\";\nimport {ProfileMode} from \"./profile.enum\";\nimport {PageService} from \"../../../../services/page.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'cv-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit, AfterViewInit, OnChanges {\n\n  /**\n   * ViewMode : Large or Small\n   */\n  @Input() public viewMode: ProfileMode = ProfileMode.LARGE;\n\n  /**\n   * Value between 0 and 360.\n   */\n  public value = -360;\n\n  /**\n   * Outer circle fill percentage.\n   * Usefully for animations.\n   */\n  public outerCircleVal = 100;\n\n  /**\n   * Data Of the menu items\n   */\n  private readonly menuItemsData: ProfileMenuItemData[] = PROFILE_CONSTANT.MENU_DATA;\n\n  /**\n   * Show profile image\n   */\n  public showImage = false;\n  /**\n   * Get the menu items.\n   */\n  public menuItems: ProfileMenuItem[] = [];\n\n  /** Stop the animation of the Input value */\n  private _stopAnimation = false;\n\n  /**\n   * Initialized ?\n   */\n  private _isInitialized: boolean = false;\n\n  /**\n   * @constructor\n   * @param _pageService\n   * @param _router\n   */\n  public constructor(\n    private readonly _pageService: PageService,\n    private readonly _router: Router,\n  ) {\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if ('viewMode' in changes) {\n      this._updateMode();\n    }\n  }\n\n  /**\n   * @inheritDoc\n    */\n  public ngOnInit() {\n    this._updateMode();\n    this._pageService.activeItem$.subscribe((activeItem) => {\n      if (activeItem) {\n        const item = this._getMenuItemByRouterLink(activeItem.link);\n        if (item != null && this._isInitialized) {\n          this._moveMenuCursorToItem(item);\n        } else if (!this._isInitialized) {\n          this._isInitialized = true;\n          this._animateLoad(item ?? this.menuItems[0]);\n        }\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showImage = true;\n    }, 2500);\n  }\n\n  /**\n   * Get Menu item by router link.\n   */\n  private _getMenuItemByRouterLink(routerLink: string): ProfileMenuItem | undefined {\n    return this.menuItems.find((item) => item.routerLink === routerLink);\n  }\n\n  /**\n   * Animate the Input value and circles at first load.\n   * @param item The menu item for moving the cursor to.\n   */\n  private _animateLoad(item: ProfileMenuItem): void {\n    const value = 360 - item.degreeItem;\n    // Animate the Input value\n    animateValueUtil((val) => {\n      /**\n       * Stop the animation of the Input value\n       * if the user is dragging the Input or clicked on a menu item.\n       */\n      if (!this._stopAnimation) {\n        this.value = val;\n        this._calculateActiveMenuItem(this.value);\n      }\n    }, value - 360, value, 4000, [.5, 0, .2, 1]);\n\n    // Animate the outer circle.\n    animateValueUtil((val) => {\n      this.outerCircleVal = val;\n    }, 0, this.outerCircleVal, 2000, [.77, 0, 0, 1.06])\n  }\n\n  /**\n   * Change the mode of the profile.\n   */\n  private _updateMode(): void {\n    this._calculateMenuItems(this.menuItems.length > 0 ? 'update' : 'create');\n  }\n\n  /**\n   * Get total importance of the menu items.\n   * We need this to calculate the fill percentage of the menu items.\n   */\n  private _getTotalImportance(): number {\n    let totalImportance = 0;\n    this.menuItemsData.forEach((item) => {\n      totalImportance += item.importance;\n    });\n    return totalImportance;\n  }\n\n  /**\n   * Get Max fill percentage for mode.\n   * @formula\n   * 100%\n   * - (360° - (dead arc circle is (start + end) / 3.6))\n   * - (2.1 % gap between items)\n   */\n  private _getMaxFillPercentage(): number {\n    return 100\n      - (360 - PROFILE_CONSTANT.MENU_DEGREE_END[this.viewMode]\n        + PROFILE_CONSTANT.MENU_DEGREE_START[this.viewMode]) / 3.6\n      - 2.1;\n  }\n\n  /**\n   * Calculate the menu items to get the fill percentages\n   * and the degree of the menu items for the current mode.\n   */\n  private _calculateMenuItems(mode: 'create' | 'update' = 'create'): void {\n    const totalImportance = this._getTotalImportance();\n    const startDegree = PROFILE_CONSTANT.MENU_DEGREE_START[this.viewMode];\n    ProfileMenuItem.setLastEndDegree(startDegree);\n    const maxFillPercentage = this._getMaxFillPercentage();\n    this.menuItemsData.forEach((dataItem, index) => {\n      // Deep clone to not modify the original data.\n      const item: ProfileMenuItemData = structuredClone(dataItem);\n      const fillPercentage = (dataItem.importance / totalImportance) * maxFillPercentage;\n      if (item.drawCircleItem.positionDegree != null && dataItem.drawCircleItem.positionDegree != null) {\n        item.drawCircleItem.positionDegree = dataItem.drawCircleItem.positionDegree - startDegree;\n      }\n\n      if (mode === 'create') {\n        /** Create New instance of ProfileMenuItem */\n        const menuItem = new ProfileMenuItem(index.toString());\n        menuItem.setData(item, fillPercentage);\n        /** Draw the menu item */\n        this.menuItems.push(menuItem);\n      } else {\n        /** Update the existing menu item */\n        const menuItem = this.menuItems.find((menuItem) => menuItem.id === index.toString());\n        if (menuItem) {\n          menuItem.setData(item, fillPercentage);\n        }\n      }\n    });\n  }\n\n  /**\n   * @event onDragStart\n   * @param $event Value of the dragging.\n   */\n  public onDragStart($event: number): void {\n    this._stopAnimation = true;\n  }\n\n  /**\n   * @event onDragging\n   * @param $event Value of the dragging.\n   */\n  public onTriggerDragging($event: number): void {\n    this.value = $event;\n    this._calculateActiveMenuItem($event)\n  }\n\n  /**\n   * Set the active menu item.\n   */\n  private _calculateActiveMenuItem(value: number): void {\n    this.menuItems.forEach((item) => {\n      item.isActive(360 - value);\n    });\n  }\n\n  /**\n   * @event onclick\n   * Activate the menu item.\n   */\n  public onClickMenuItem(item: ProfileMenuItem): void {\n    this._stopAnimation = true;\n    //this._pageService.setPageDirection(true);\n    if (item.routerLink != null) {\n      this._pageService.navigate(item.routerLink);\n    } else {\n      this._moveMenuCursorToItem(item);\n    }\n  }\n\n  /**\n   * Move the menu cursor to the clicked menu item.\n   * @param item The clicked menu item.\n   */\n  private _moveMenuCursorToItem(item: ProfileMenuItem): void {\n    this._stopAnimation = true;\n    this._toggleActiveMenuItem(item);\n    animateValueUtil((val) => {\n      this.value = val;\n    }, this.value, 360 - item.degreeItem, 700, [.02, .55, .32, 1]);\n  }\n\n  /**\n   * Toggle active menu item.\n   */\n  private _toggleActiveMenuItem(item: ProfileMenuItem): void {\n    this.menuItems.forEach((menuItem) => {\n      if (menuItem !== item) {\n        menuItem.active = false;\n      }\n    });\n    item.active = true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use 'functions' as fn;\r\n@use 'mixins';\r\n@use \"sass:math\";\r\n\r\n.profile {\r\n  &__container {\r\n    position: relative;\r\n    width: 720px;\r\n    height: 480px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  &__circle {\r\n    width: 300px;\r\n    height: 300px;\r\n    position: relative;\r\n\r\n    .profile-img {\r\n      @include mixins.transition(7s);\r\n      pointer-events: none;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 500px;\r\n      height: 205px;\r\n      width: 205px;\r\n      object-fit: cover;\r\n      opacity: 0;\r\n      &.show {\r\n        opacity: .45;\r\n      }\r\n    }\r\n    .circle-wrapper {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      border-radius: 50%;\r\n    }\r\n    .circle-outer {\r\n      &__mask {\r\n        pointer-events: none;\r\n        $size: 240px;\r\n        $offset: 300px - $size;\r\n        width: calc(100% - #{$offset});\r\n        height: calc(100% - #{$offset});\r\n        --circle--track-bar-color: transparent;\r\n\r\n        .mask-circle {\r\n          cv-draw-circle {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            cursor: pointer;\r\n            --draw-circle--track-bar-color: #{fn.get-color(primary, 800, .7)};\r\n\r\n            &.active, &:hover {\r\n              --draw-circle--track-bar-color: #{fn.get-color(primary, 600)};\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &__input {\r\n        pointer-events: none;\r\n        $size: 210px;\r\n        $offset: 300px - $size;\r\n        width: calc(100% - #{$offset});\r\n        height: calc(100% - #{$offset});\r\n        top: math.div($offset, 2);\r\n        left: math.div($offset, 2);\r\n        --circle--track-bar-color: conic-gradient(from 0deg,\r\n          #{fn.get-color(primary, 600, 0.4)} 30deg,\r\n          #{fn.get-color(primary, 900)} 180deg,\r\n          #{fn.get-color(primary, 600, 0.4)} 330deg);\r\n\r\n        --input-circle-slider--handler-color: transparent;\r\n        --input-circle-slider--handler-pointer-events: none;\r\n\r\n        .handler {\r\n          position: absolute;\r\n          top: 10px;\r\n          left: -90px;\r\n          --draw-circle--track-bar-color: #{fn.get-color(primary, 900)};\r\n          &:hover {\r\n            --draw-circle--track-bar-color: #{fn.get-color(primary, 600)};\r\n          }\r\n        }\r\n      }\r\n\r\n      &__menu {\r\n        pointer-events: none;\r\n        $size: 390px;\r\n        $offset: 300px - $size;\r\n        width: calc(100% - #{$offset});\r\n        height: calc(100% - #{$offset});\r\n        top: math.div($offset, 2);\r\n        left: math.div($offset, 2);\r\n        position: relative;\r\n\r\n        --circle--track-bar-color: conic-gradient(from 0deg,\r\n          #{fn.get-color(primary, 600, 0.4)} 30deg,\r\n          #{fn.get-color(primary, 900)} 180deg,\r\n          #{fn.get-color(primary, 600, 0.4)} 330deg);\r\n\r\n        > * {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: $size;\r\n          height: $size;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_pageService",
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "rawdescription": "\n\n",
                "modifierKind": [
                    123
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1449,
                            "end": 1461,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_pageService"
                        },
                        "type": "PageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1443,
                            "end": 1448,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 1474,
                            "end": 1481,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "_router"
                        },
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1468,
                            "end": 1473,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"profile__container\">\n  <div class=\"profile__circle\">\n    <img class=\"profile-img\" src=\"assets/img/soheil.png\" alt=\"Soheil Saheb-Jamii\"\n         [class.show]=\"showImage\">\n    <div class=\"circle-outer__mask circle-wrapper\">\n      <cv-circle class=\"mask-circle\" [size]=\"300\" [weight]=\"40\" [fillPercentage]=\"outerCircleVal\" [startAt]=\"9\">\n        <!--Contact-->\n        <cv-draw-circle *ngFor=\"let item of menuItems\" mask-inner anchorPoint=\"start\"\n                        (click)=\"onClickMenuItem(item)\"\n                        [reverse]=\"true\"\n                        [class.active]=\"item.active\"\n                        [size]=\"item.drawCircleItem.size ?? 0\"\n                        [positionDegree]=\"item.drawCircleItem.positionDegree ?? 0\"\n                        [arcDegree]=\"item.drawCircleItem.arcDegree ?? 0\"\n                        [weight]=\"item.drawCircleItem.weight ?? 0\"></cv-draw-circle>\n      </cv-circle>\n    </div>\n\n    <!--Profile-->\n    <div class=\"circle-outer__menu\">\n      <cv-circle-menu-item *ngFor=\"let item of menuItems\"\n                           [size]=\"item.circleMenuItem.size ?? 310\"\n                           [weight]=\"item.circleMenuItem.weight ?? 80\"\n                           [torque]=\"item.circleMenuItem.torque ?? 0\"\n                           [contentOffset]=\"item.circleMenuItem.contentOffset ?? 75\"\n                           [title]=\"item.circleMenuItem.title ?? ''\"\n                           [description]=\"item.circleMenuItem.description ?? ''\"\n                           [fillPercentage]=\"item.circleMenuItem.fillPercentage ?? 0\"\n                           [positionDegree]=\"item.circleMenuItem.positionDegree ?? 0\" [active]=\"item.active\">\n      </cv-circle-menu-item>\n    </div>\n    <div class=\"circle-outer__input circle-wrapper\">\n      <cv-input-circle-slider class=\"circle-input\" [showValue]=\"false\"\n                              [min]=\"0\"\n                              [max]=\"360\"\n                              (triggerDragging)=\"onTriggerDragging($event)\"\n                              (triggerDragStart)=\"onDragStart($event)\"\n                              [value]=\"value\"\n                              [size]=\"210\"\n                              [animate]=\"false\"\n                              [allowCross]=\"true\"\n                              [weight]=\"2\">\n        <cv-draw-circle class=\"handler\" [positionDegree]=\"0\"\n                        [size]=\"210\" [weight]=\"15\"\n                        [arcDegree]=\"90\"></cv-draw-circle>\n      </cv-input-circle-slider>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "StorybookWrapperComponent",
            "id": "component-StorybookWrapperComponent-863f0f1c6fb2a50a0b9809383690e353b211a8dc90eb504a855b53aaff8c25c15860102c4804742846bccbf4847ecdb583fae280fb050c8f8d2a6bd11eb72b22",
            "file": "src/app/modules/shared/storybook-wrapper/storybook-wrapper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cv-storybook-wrapper",
            "styleUrls": [
                "./storybook-wrapper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./storybook-wrapper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "height",
                    "defaultValue": "'100%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "padding",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'100%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'cv-storybook-wrapper',\n  templateUrl: './storybook-wrapper.component.html',\n  styleUrls: ['./storybook-wrapper.component.scss']\n})\nexport class StorybookWrapperComponent {\n  @Input() public width?: string = '100%';\n  @Input() public height?: string = '100%';\n  @Input() public padding?: string = '0';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px dashed rgba(255,255,255,0.08);\r\n}\r\n",
                    "styleUrl": "./storybook-wrapper.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"storybook-wrapper\"\n     [style.width]=\"width\"\n     [style.height]=\"height\"\n     [style.padding]=\"padding\"\n>\n  <ng-content></ng-content>\n</div>\n\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-3357d854d458196d642e7f0da2c0faa6327af528a7f5831d31b8a32427db80d00ec8bbb0261209e6089f9cc2f18d2feeec21a1332901d45e271a8ed70a17cac2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "// TODO: Uncomment all lines when https://github.com/ngx-translate/core/pull/1399 is merged\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './modules/main/main.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {RouterModule} from \"@angular/router\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\n/*\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MainModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    /*TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),*/\n  ],\n  exports: [\n    //TranslateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MainModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3d72550b69a194935138085a767eea1b9f579abf12ca06f71a8975c9e6a11a3bda8c0080c8a820dfe24a69398e99f35df09c3f85aec52111f604ecf1c165bef0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {PageHomeComponent} from \"./modules/main/components/page-home/page-home.component\";\nimport {PageContactComponent} from \"./modules/main/components/page-contact/page-contact.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageHomeComponent,\n    data: {\n      state: 'home',\n      menuItem: {\n        label: 'Soheil Saheb-Jamii',\n        index: 0\n      }\n    }\n  },\n  {\n    path: 'contact',\n    component: PageContactComponent,\n    data: {\n      state: 'contact',\n      menuItem: {\n        label: 'Contact',\n        index: 1\n      }\n    }\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  }\n];\n\nexport const appRouting = RouterModule.forRoot(routes);\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CircleModule",
            "id": "module-CircleModule-b06311f783dd621c7f2f1567d63ca745ea978cbcaa848544d453f86f8c7af74a4ed2486675997d77f5f85557b2dd92c27fb3e81c1f387357d01193351b24c517",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/circle/circle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircleComponent } from './circle.component';\n\n\n\n@NgModule({\n  declarations: [\n    CircleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CircleComponent\n  ]\n})\nexport class CircleModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CircleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CircleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DrawCircleModule",
            "id": "module-DrawCircleModule-539855a34251786f5abac6c15232e624ce8fd1d553f27b0a9b1b308fe3d17fddb1d034575deb2a45626ddaffd286b2150e70eea6e5e08613b8cd1492dd961f71",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/draw-circle/draw-circle.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawCircleComponent } from './draw-circle.component';\n\n\n\n@NgModule({\n  declarations: [\n    DrawCircleComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DrawCircleComponent\n  ]\n})\nexport class DrawCircleModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DrawCircleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DrawCircleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputCircleSliderModule",
            "id": "module-InputCircleSliderModule-e25daeffbc6e41bd80d250d90245dc4f9a99ce7efdd5ae58540c26418e18583025a73765d138cafde26ebf99a881d4aa61e2b384df2c15499390bfac524c80ce",
            "description": "<p>Module for the InputCircleSliderComponent.</p>\n",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputCircleSliderComponent } from './input-circle-slider.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport {CircleModule} from \"../circle/circle.module\";\n\n/**\n * Module for the InputCircleSliderComponent.\n */\n@NgModule({\n  declarations: [\n    InputCircleSliderComponent\n  ],\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CircleModule\n    ],\n  exports: [\n    InputCircleSliderComponent\n  ],\n})\nexport class InputCircleSliderModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputCircleSliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CircleModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputCircleSliderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MainModule",
            "id": "module-MainModule-8aafbfa672f112464c3e08d2ea9718d90e0ef19f2200c13d43631fac994887494777aefb036c7de18f3a43f139d865e6188e0c8fa1e9f61e8813905e76528aab",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/main/main.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './components/main/main.component';\nimport {LayoutComponent} from \"./components/layout/layout.component\";\nimport { PageHomeComponent } from './components/page-home/page-home.component';\nimport { PageContactComponent } from './components/page-contact/page-contact.component';\nimport {RouterLink, RouterModule} from \"@angular/router\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport { HeaderComponent } from './components/header/header.component';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport { MenuComponent } from './components/menu/menu.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport {CircleModule} from \"../shared/circle/circle.module\";\nimport {InputCircleSliderModule} from \"../shared/input-circle-slider/input-circle-slider.module\";\nimport {DrawCircleModule} from \"../shared/draw-circle/draw-circle.module\";\nimport { CircleMenuItemComponent } from './components/circle-menu-item/circle-menu-item.component';\nimport {PageWrapperModule} from \"../shared/page-wrapper/page-wrapper.module\";\nimport { BlockComponent } from './components/block/block.component';\n\n\n\n@NgModule({\n    declarations: [\n        MainComponent,\n        LayoutComponent,\n        PageHomeComponent,\n        PageContactComponent,\n        HeaderComponent,\n        MenuComponent,\n        ProfileComponent,\n        CircleMenuItemComponent,\n        BlockComponent,\n    ],\n  imports: [\n    CommonModule,\n    RouterLink,\n    RouterModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    CircleModule,\n    InputCircleSliderModule,\n    DrawCircleModule,\n    PageWrapperModule\n  ],\n  exports: [\n    MainComponent,\n    LayoutComponent\n  ],\n})\nexport class MainModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlockComponent"
                        },
                        {
                            "name": "CircleMenuItemComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MainComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "PageContactComponent"
                        },
                        {
                            "name": "PageHomeComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CircleModule"
                        },
                        {
                            "name": "DrawCircleModule"
                        },
                        {
                            "name": "InputCircleSliderModule"
                        },
                        {
                            "name": "PageWrapperModule"
                        },
                        {
                            "name": "RouterLink"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MainComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PageWrapperModule",
            "id": "module-PageWrapperModule-1e4cfa59f644ba5633d5066eaa3d565b4d4a88710d21ea7a34bee5068ff5199e0936a12e942b5225381bcc5a247378399f0e5baefaaf34dc32fedaa929feffe2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/page-wrapper/page-wrapper.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageWrapperComponent } from './page-wrapper.component';\n\n\n\n@NgModule({\n  declarations: [\n    PageWrapperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PageWrapperComponent\n  ]\n})\nexport class PageWrapperModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageWrapperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PageWrapperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StorybookWrapperModule",
            "id": "module-StorybookWrapperModule-b0ae0c6fffe9720968eea223f049eb96c938e52dcfae01163d64d8c2b9b66a686c14ad9e9e70c1dbf0c560e68aba64c1ec14b4f59fea3f7fc66e8b82cb92a1fe",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/shared/storybook-wrapper/storybook-wrapper.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StorybookWrapperComponent } from './storybook-wrapper.component';\n\n\n\n@NgModule({\n  declarations: [\n    StorybookWrapperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    StorybookWrapperComponent\n  ]\n})\nexport class StorybookWrapperModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StorybookWrapperComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "StorybookWrapperComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "animateValueUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/animate-value.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(\r\n  cb: (value: number) => void,\r\n  start: number,\r\n  end: number,\r\n  duration: number = 1000,\r\n  ease: [number, number, number, number] = [.43, .02, .04, 1]\r\n): void => {\r\n  let startTimestamp: number | null = null;\r\n  const step = (timestamp: number) => {\r\n    if (!startTimestamp) startTimestamp = timestamp;\r\n    const progress = Math.min((timestamp - startTimestamp) / duration, 1);\r\n    //this.value = start + progress * (end - start);\r\n\r\n    const value = start + easeCubicBezierUtil(progress, ease) * (end - start);\r\n    cb(value);\r\n    if (progress < 1) {\r\n      window.requestAnimationFrame(step);\r\n    }\r\n  };\r\n  window.requestAnimationFrame(step);\r\n}",
                "rawdescription": "Animate number value.",
                "description": "<p>Animate number value.</p>\n"
            },
            {
                "name": "appRouting",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app-routing.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "RouterModule.forRoot(routes)"
            },
            {
                "name": "Block",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/block/block.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Circle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/circle/circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CircleMenuItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CircleSlider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DrawCircle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "easeCubicBezierUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/ease-in-out-cubic.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  const [x1, y1, x2, y2] = ease;\r\n  // Calculate the polynomial coefficients,\r\n  // implicit first and last control points are (0,0) and (1,1).\r\n  const cx = 3.0 * x1;\r\n  const bx = 3.0 * (x2 - x1) - cx;\r\n  const ax = 1.0 - cx - bx;\r\n  const cy = 3.0 * y1;\r\n  const by = 3.0 * (y2 - y1) - cy;\r\n  const ay = 1.0 - cy - by;\r\n\r\n  function sampleCurveX(t: number): number {\r\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\r\n    return ((ax * t + bx) * t + cx) * t;\r\n  }\r\n\r\n  function sampleCurveY(t: number): number {\r\n    return ((ay * t + by) * t + cy) * t;\r\n  }\r\n\r\n  function sampleCurveDerivativeX(t: number): number {\r\n    return (3.0 * ax * t + 2.0 * bx) * t + cx;\r\n  }\r\n\r\n  // Given an x value, find a parametric value it came from.\r\n  function solveCurveX(x: number, epsilon: number): number {\r\n    let t0;\r\n    let t1;\r\n    let t2;\r\n    let x2;\r\n    let d2;\r\n    let i;\r\n\r\n    // First try a few iterations of Newton's method -- normally very fast.\r\n    for (t2 = x, i = 0; i < 8; i++) {\r\n      x2 = sampleCurveX(t2) - x;\r\n      if (Math.abs(x2) < epsilon) {\r\n        return t2;\r\n      }\r\n      d2 = sampleCurveDerivativeX(t2);\r\n      if (Math.abs(d2) < 1e-6) {\r\n        break;\r\n      }\r\n      t2 = t2 - x2 / d2;\r\n    }\r\n\r\n    // Fall back to the bisection method for reliability.\r\n    t0 = 0.0;\r\n    t1 = 1.0;\r\n    t2 = x;\r\n\r\n    if (t2 < t0) {\r\n      return t0;\r\n    }\r\n    if (t2 > t1) {\r\n      return t1;\r\n    }\r\n\r\n    while (t0 < t1) {\r\n      x2 = sampleCurveX(t2);\r\n      if (Math.abs(x2 - x) < epsilon) {\r\n        return t2;\r\n      }\r\n      if (x > x2) {\r\n        t0 = t2;\r\n      } else {\r\n        t1 = t2;\r\n      }\r\n      t2 = (t1 - t0) * 0.5 + t0;\r\n    }\r\n\r\n    // Failure.\r\n    return t2;\r\n  }\r\n\r\n  return sampleCurveY(solveCurveX(t, 1 / 200));\r\n}",
                "rawdescription": "Ease cubic bezier function.",
                "description": "<p>Ease cubic bezier function.</p>\n"
            },
            {
                "name": "easeInCubicUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/ease-in-out-cubic.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return t * t * t;\r\n}"
            },
            {
                "name": "easeInOutCubicUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/ease-in-out-cubic.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n}",
                "rawdescription": "Ease in out cubic function.",
                "description": "<p>Ease in out cubic function.</p>\n"
            },
            {
                "name": "easeOutCubicUtil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/ease-in-out-cubic.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return (--t) * t * t + 1;\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Home",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/page-home/page-home.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Layout",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/main/main.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MainStorybookModuleConstant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/main-storybook-module.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  declarations: [\n    MainComponent,\n    LayoutComponent,\n    PageHomeComponent,\n    PageContactComponent,\n    HeaderComponent,\n    MenuComponent,\n    ProfileComponent,\n    CircleMenuItemComponent,\n    BlockComponent,\n  ],\n  imports: [\n    appRouting,\n    BrowserAnimationsModule,\n    CircleModule,\n    CommonModule,\n    RouterLink,\n    RouterModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    InputCircleSliderModule,\n    DrawCircleModule,\n    StorybookWrapperModule,\n    PageWrapperModule,\n  ],\n  exports: [\n    MainComponent,\n    LayoutComponent,\n    HeaderComponent,\n    ProfileComponent,\n    CircleMenuItemComponent,\n    BlockComponent,\n  ],\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PageWrapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Profile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PROFILE_CONSTANT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/profile/profile.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  /**\r\n   * Graphical menu degree start.\r\n   */\r\n  MENU_DEGREE_START: {\r\n    [ProfileMode.SMALL]: -90,\r\n    [ProfileMode.LARGE]: 0,\r\n  },\r\n\r\n  /**\r\n   * Graphical menu degree end. (from 0 to 360)\r\n   *\r\n   * Will be relative to the MENU_DEGREE_START.\r\n   */\r\n  MENU_DEGREE_END: {\r\n    [ProfileMode.SMALL]: 90,\r\n    [ProfileMode.LARGE]: 270,\r\n  },\r\n\r\n  /**\r\n   * MENU_DATA\r\n   */\r\n  MENU_DATA: [\r\n    { // * About\r\n      routerLink: '/',\r\n      importance: 10,\r\n      circleMenuItem: {\r\n        title: 'About',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 250,\r\n        weight: 50,\r\n        torque: 10,\r\n        contentOffset: 50,\r\n      },\r\n      drawCircleItem: {\r\n        size: 276,\r\n        weight: 4\r\n      },\r\n    },\r\n    // * Skills\r\n    {\r\n      importance: 40,\r\n      offset: 20,\r\n\r\n      circleMenuItem: {\r\n        title: 'Skills',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 310,\r\n        weight: 55,\r\n        torque: -30,\r\n        contentOffset: 35,\r\n      },\r\n      drawCircleItem: {\r\n        size: 310,\r\n        weight: 17\r\n      },\r\n    },\r\n    // * Experience\r\n    {\r\n      importance: 20,\r\n      circleMenuItem: {\r\n        title: 'Experience',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 310,\r\n        weight: 80,\r\n        torque: -25,\r\n        contentOffset: 10,\r\n      },\r\n      drawCircleItem: {\r\n        size: 310,\r\n        weight: 17\r\n      },\r\n    },\r\n    // * Education\r\n    {\r\n      importance: 10,\r\n      circleMenuItem: {\r\n        title: 'Education',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 250,\r\n        contentOffset: 50,\r\n        weight: 80,\r\n      },\r\n      drawCircleItem: {\r\n        size: 276,\r\n        weight: 4\r\n      },\r\n    },\r\n    // * Contact\r\n    {\r\n      routerLink: '/contact',\r\n      importance: 10,\r\n      circleMenuItem: {\r\n        title: 'Contact',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 250,\r\n        weight: 20,\r\n      },\r\n      drawCircleItem: {\r\n        size: 276,\r\n        weight: 4\r\n      },\r\n    },\r\n    ] as ProfileMenuItemData[]\r\n  }"
            },
            {
                "name": "ROUTER_LTR_TRANSITION_CONSTANT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/router-transition.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routerTransitionLtR', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                "rawdescription": "Router transition constant.\r\nLeft to right.",
                "description": "<p>Router transition constant.\nLeft to right.</p>\n"
            },
            {
                "name": "ROUTER_RTL_TRANSITION_CONSTANT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/router-transition.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "trigger('routerTransitionRtL', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                "rawdescription": "Router transition constant.\r\nRight to left.",
                "description": "<p>Router transition constant.\nRight to left.</p>\n"
            },
            {
                "name": "StorybookRangeControlConstant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/storybook-range-control.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  type: 'range',\r\n  min: 0,\r\n  max: 100,\r\n  step: 1,\r\n}",
                "rawdescription": "Storybook range control constant - 0 to 100",
                "description": "<p>Storybook range control constant - 0 to 100</p>\n"
            },
            {
                "name": "StorybookRangeControlFn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/storybook-range-control.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(min: number, max: number) => {\r\n  return {\r\n    type: 'range',\r\n    min,\r\n    max,\r\n    step: 1,\r\n  }\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/circle/circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CircleComponent>",
                "defaultValue": "(args: CircleComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DrawCircleComponent>",
                "defaultValue": "(args: DrawCircleComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputCircleSliderComponent>",
                "defaultValue": "(args: InputCircleSliderComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PageWrapperComponent>",
                "defaultValue": "(args: PageWrapperComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/block/block.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BlockComponent>",
                "defaultValue": "(args: BlockComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CircleMenuItemComponent>",
                "defaultValue": "(args: CircleMenuItemComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/layout/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LayoutComponent>",
                "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MenuComponent>",
                "defaultValue": "(args: MenuComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/main/main.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MainComponent>",
                "defaultValue": "(args: MainComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProfileComponent>",
                "defaultValue": "(args: ProfileComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/main/components/page-home/page-home.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PageHomeComponent>",
                "defaultValue": "(args: PageHomeComponent) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Template of the component.",
                "description": "<p>Template of the component.</p>\n"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ProfileMode",
                "childs": [
                    {
                        "name": "LARGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    },
                    {
                        "name": "SMALL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/modules/main/components/profile/profile.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/utils/animate-value.util.ts": [
                {
                    "name": "animateValueUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/animate-value.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(\r\n  cb: (value: number) => void,\r\n  start: number,\r\n  end: number,\r\n  duration: number = 1000,\r\n  ease: [number, number, number, number] = [.43, .02, .04, 1]\r\n): void => {\r\n  let startTimestamp: number | null = null;\r\n  const step = (timestamp: number) => {\r\n    if (!startTimestamp) startTimestamp = timestamp;\r\n    const progress = Math.min((timestamp - startTimestamp) / duration, 1);\r\n    //this.value = start + progress * (end - start);\r\n\r\n    const value = start + easeCubicBezierUtil(progress, ease) * (end - start);\r\n    cb(value);\r\n    if (progress < 1) {\r\n      window.requestAnimationFrame(step);\r\n    }\r\n  };\r\n  window.requestAnimationFrame(step);\r\n}",
                    "rawdescription": "Animate number value.",
                    "description": "<p>Animate number value.</p>\n"
                }
            ],
            "src/app/app-routing.module.ts": [
                {
                    "name": "appRouting",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app-routing.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "RouterModule.forRoot(routes)"
                }
            ],
            "src/app/modules/main/components/block/block.stories.ts": [
                {
                    "name": "Block",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/block/block.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/block/block.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BlockComponent>",
                    "defaultValue": "(args: BlockComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/shared/circle/circle.stories.ts": [
                {
                    "name": "Circle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/circle/circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/circle/circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CircleComponent>",
                    "defaultValue": "(args: CircleComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts": [
                {
                    "name": "CircleMenuItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CircleMenuItemComponent>",
                    "defaultValue": "(args: CircleMenuItemComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts": [
                {
                    "name": "CircleSlider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputCircleSliderComponent>",
                    "defaultValue": "(args: InputCircleSliderComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/shared/draw-circle/draw-circle.stories.ts": [
                {
                    "name": "DrawCircle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DrawCircleComponent>",
                    "defaultValue": "(args: DrawCircleComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/utils/ease-in-out-cubic.util.ts": [
                {
                    "name": "easeCubicBezierUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/ease-in-out-cubic.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  const [x1, y1, x2, y2] = ease;\r\n  // Calculate the polynomial coefficients,\r\n  // implicit first and last control points are (0,0) and (1,1).\r\n  const cx = 3.0 * x1;\r\n  const bx = 3.0 * (x2 - x1) - cx;\r\n  const ax = 1.0 - cx - bx;\r\n  const cy = 3.0 * y1;\r\n  const by = 3.0 * (y2 - y1) - cy;\r\n  const ay = 1.0 - cy - by;\r\n\r\n  function sampleCurveX(t: number): number {\r\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\r\n    return ((ax * t + bx) * t + cx) * t;\r\n  }\r\n\r\n  function sampleCurveY(t: number): number {\r\n    return ((ay * t + by) * t + cy) * t;\r\n  }\r\n\r\n  function sampleCurveDerivativeX(t: number): number {\r\n    return (3.0 * ax * t + 2.0 * bx) * t + cx;\r\n  }\r\n\r\n  // Given an x value, find a parametric value it came from.\r\n  function solveCurveX(x: number, epsilon: number): number {\r\n    let t0;\r\n    let t1;\r\n    let t2;\r\n    let x2;\r\n    let d2;\r\n    let i;\r\n\r\n    // First try a few iterations of Newton's method -- normally very fast.\r\n    for (t2 = x, i = 0; i < 8; i++) {\r\n      x2 = sampleCurveX(t2) - x;\r\n      if (Math.abs(x2) < epsilon) {\r\n        return t2;\r\n      }\r\n      d2 = sampleCurveDerivativeX(t2);\r\n      if (Math.abs(d2) < 1e-6) {\r\n        break;\r\n      }\r\n      t2 = t2 - x2 / d2;\r\n    }\r\n\r\n    // Fall back to the bisection method for reliability.\r\n    t0 = 0.0;\r\n    t1 = 1.0;\r\n    t2 = x;\r\n\r\n    if (t2 < t0) {\r\n      return t0;\r\n    }\r\n    if (t2 > t1) {\r\n      return t1;\r\n    }\r\n\r\n    while (t0 < t1) {\r\n      x2 = sampleCurveX(t2);\r\n      if (Math.abs(x2 - x) < epsilon) {\r\n        return t2;\r\n      }\r\n      if (x > x2) {\r\n        t0 = t2;\r\n      } else {\r\n        t1 = t2;\r\n      }\r\n      t2 = (t1 - t0) * 0.5 + t0;\r\n    }\r\n\r\n    // Failure.\r\n    return t2;\r\n  }\r\n\r\n  return sampleCurveY(solveCurveX(t, 1 / 200));\r\n}",
                    "rawdescription": "Ease cubic bezier function.",
                    "description": "<p>Ease cubic bezier function.</p>\n"
                },
                {
                    "name": "easeInCubicUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/ease-in-out-cubic.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return t * t * t;\r\n}"
                },
                {
                    "name": "easeInOutCubicUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/ease-in-out-cubic.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n}",
                    "rawdescription": "Ease in out cubic function.",
                    "description": "<p>Ease in out cubic function.</p>\n"
                },
                {
                    "name": "easeOutCubicUtil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/ease-in-out-cubic.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(t: number, ease: [number, number, number, number]): number => {\r\n  return (--t) * t * t + 1;\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/app/modules/main/components/header/header.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/page-home/page-home.stories.ts": [
                {
                    "name": "Home",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/page-home/page-home.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/page-home/page-home.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PageHomeComponent>",
                    "defaultValue": "(args: PageHomeComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/layout/layout.stories.ts": [
                {
                    "name": "Layout",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/layout/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LayoutComponent>",
                    "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/main/main.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/main/main.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/main/main.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MainComponent>",
                    "defaultValue": "(args: MainComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/main-storybook-module.constant.ts": [
                {
                    "name": "MainStorybookModuleConstant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/main-storybook-module.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  declarations: [\n    MainComponent,\n    LayoutComponent,\n    PageHomeComponent,\n    PageContactComponent,\n    HeaderComponent,\n    MenuComponent,\n    ProfileComponent,\n    CircleMenuItemComponent,\n    BlockComponent,\n  ],\n  imports: [\n    appRouting,\n    BrowserAnimationsModule,\n    CircleModule,\n    CommonModule,\n    RouterLink,\n    RouterModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    InputCircleSliderModule,\n    DrawCircleModule,\n    StorybookWrapperModule,\n    PageWrapperModule,\n  ],\n  exports: [\n    MainComponent,\n    LayoutComponent,\n    HeaderComponent,\n    ProfileComponent,\n    CircleMenuItemComponent,\n    BlockComponent,\n  ],\n}"
                }
            ],
            "src/app/modules/main/components/menu/menu.stories.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MenuComponent>",
                    "defaultValue": "(args: MenuComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts": [
                {
                    "name": "PageWrapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PageWrapperComponent>",
                    "defaultValue": "(args: PageWrapperComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/profile/profile.stories.ts": [
                {
                    "name": "Profile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProfileComponent>",
                    "defaultValue": "(args: ProfileComponent) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Template of the component.",
                    "description": "<p>Template of the component.</p>\n"
                }
            ],
            "src/app/modules/main/components/profile/profile.constant.ts": [
                {
                    "name": "PROFILE_CONSTANT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/main/components/profile/profile.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  /**\r\n   * Graphical menu degree start.\r\n   */\r\n  MENU_DEGREE_START: {\r\n    [ProfileMode.SMALL]: -90,\r\n    [ProfileMode.LARGE]: 0,\r\n  },\r\n\r\n  /**\r\n   * Graphical menu degree end. (from 0 to 360)\r\n   *\r\n   * Will be relative to the MENU_DEGREE_START.\r\n   */\r\n  MENU_DEGREE_END: {\r\n    [ProfileMode.SMALL]: 90,\r\n    [ProfileMode.LARGE]: 270,\r\n  },\r\n\r\n  /**\r\n   * MENU_DATA\r\n   */\r\n  MENU_DATA: [\r\n    { // * About\r\n      routerLink: '/',\r\n      importance: 10,\r\n      circleMenuItem: {\r\n        title: 'About',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 250,\r\n        weight: 50,\r\n        torque: 10,\r\n        contentOffset: 50,\r\n      },\r\n      drawCircleItem: {\r\n        size: 276,\r\n        weight: 4\r\n      },\r\n    },\r\n    // * Skills\r\n    {\r\n      importance: 40,\r\n      offset: 20,\r\n\r\n      circleMenuItem: {\r\n        title: 'Skills',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 310,\r\n        weight: 55,\r\n        torque: -30,\r\n        contentOffset: 35,\r\n      },\r\n      drawCircleItem: {\r\n        size: 310,\r\n        weight: 17\r\n      },\r\n    },\r\n    // * Experience\r\n    {\r\n      importance: 20,\r\n      circleMenuItem: {\r\n        title: 'Experience',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 310,\r\n        weight: 80,\r\n        torque: -25,\r\n        contentOffset: 10,\r\n      },\r\n      drawCircleItem: {\r\n        size: 310,\r\n        weight: 17\r\n      },\r\n    },\r\n    // * Education\r\n    {\r\n      importance: 10,\r\n      circleMenuItem: {\r\n        title: 'Education',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 250,\r\n        contentOffset: 50,\r\n        weight: 80,\r\n      },\r\n      drawCircleItem: {\r\n        size: 276,\r\n        weight: 4\r\n      },\r\n    },\r\n    // * Contact\r\n    {\r\n      routerLink: '/contact',\r\n      importance: 10,\r\n      circleMenuItem: {\r\n        title: 'Contact',\r\n        description: 'Lorem ipsum dolor sit amet',\r\n        size: 250,\r\n        weight: 20,\r\n      },\r\n      drawCircleItem: {\r\n        size: 276,\r\n        weight: 4\r\n      },\r\n    },\r\n    ] as ProfileMenuItemData[]\r\n  }"
                }
            ],
            "src/app/constants/router-transition.constant.ts": [
                {
                    "name": "ROUTER_LTR_TRANSITION_CONSTANT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/router-transition.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routerTransitionLtR', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(-100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                    "rawdescription": "Router transition constant.\r\nLeft to right.",
                    "description": "<p>Router transition constant.\nLeft to right.</p>\n"
                },
                {
                    "name": "ROUTER_RTL_TRANSITION_CONSTANT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/router-transition.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "trigger('routerTransitionRtL', [\r\n  transition('* <=> *', [\r\n    /* order */\r\n    /* 1 */\r\n    query(':enter, :leave', style({ position: 'fixed', width:'100%' })\r\n      , { optional: true }),\r\n    /* 2 */\r\n    group([  // block executes in parallel\r\n      query(':enter', [\r\n        style({ transform: 'translateX(100%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n      ], { optional: true }),\r\n      query(':leave', [\r\n        style({ transform: 'translateX(0%)' }),\r\n        animate('.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\r\n      ], { optional: true }),\r\n    ])\r\n  ])\r\n])",
                    "rawdescription": "Router transition constant.\r\nRight to left.",
                    "description": "<p>Router transition constant.\nRight to left.</p>\n"
                }
            ],
            "src/app/constants/storybook-range-control.constant.ts": [
                {
                    "name": "StorybookRangeControlConstant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/storybook-range-control.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  type: 'range',\r\n  min: 0,\r\n  max: 100,\r\n  step: 1,\r\n}",
                    "rawdescription": "Storybook range control constant - 0 to 100",
                    "description": "<p>Storybook range control constant - 0 to 100</p>\n"
                },
                {
                    "name": "StorybookRangeControlFn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/storybook-range-control.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(min: number, max: number) => {\r\n  return {\r\n    type: 'range',\r\n    min,\r\n    max,\r\n    step: 1,\r\n  }\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/modules/main/components/profile/profile.enum.ts": [
                {
                    "name": "ProfileMode",
                    "childs": [
                        {
                            "name": "LARGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        },
                        {
                            "name": "SMALL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/modules/main/components/profile/profile.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "PageHomeComponent",
                        "data": {
                            "state": "home",
                            "menuItem": {
                                "label": "SoheilSaheb-Jamii",
                                "index": "0"
                            }
                        }
                    },
                    {
                        "path": "contact",
                        "component": "PageContactComponent",
                        "data": {
                            "state": "contact",
                            "menuItem": {
                                "label": "Contact",
                                "index": "1"
                            }
                        }
                    },
                    {
                        "path": "**",
                        "redirectTo": ""
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 38,
        "status": "medium",
        "files": [
            {
                "filePath": "src/app/app-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appRouting",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/constants/router-transition.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTER_LTR_TRANSITION_CONSTANT",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/constants/router-transition.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTER_RTL_TRANSITION_CONSTANT",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/constants/storybook-range-control.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StorybookRangeControlConstant",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/constants/storybook-range-control.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StorybookRangeControlFn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/block/block.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlockComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/block/block.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Block",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/block/block.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/circle-menu-item/circle-menu-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CircleMenuItemComponent",
                "coveragePercent": 70,
                "coverageCount": "14/20",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/main/components/circle-menu-item/circle-menu-item.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iCircleMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CircleMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/circle-menu-item/circle-menu-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 62,
                "coverageCount": "5/8",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/main/components/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Layout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/layout/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/main/main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/main/main.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/main/main.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItem",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/page-contact/page-contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/page-home/page-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/page-home/page-home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Home",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/page-home/page-home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.component.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProfileMenuItem",
                "coveragePercent": 85,
                "coverageCount": "17/20",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 72,
                "coverageCount": "18/25",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROFILE_CONSTANT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProfileMenuItemData",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Profile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/main/components/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/main/main-storybook-module.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MainStorybookModuleConstant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/circle/circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CircleComponent",
                "coveragePercent": 86,
                "coverageCount": "13/15",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/circle/circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Circle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/circle/circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DrawCircleComponent",
                "coveragePercent": 62,
                "coverageCount": "10/16",
                "status": "good"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DrawCircleCoordinates",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "iDrawCircle",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DrawCircle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/draw-circle/draw-circle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/input-circle-slider/input-circle-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputCircleSliderComponent",
                "coveragePercent": 78,
                "coverageCount": "29/37",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CircleSlider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/input-circle-slider/input-circle-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/page-wrapper/page-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/shared/page-wrapper/page-wrapper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/shared/storybook-wrapper/storybook-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/page.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PageService",
                "coveragePercent": 72,
                "coverageCount": "13/18",
                "status": "good"
            },
            {
                "filePath": "src/app/utils/animate-value.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "animateValueUtil",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/utils/ease-in-out-cubic.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "easeCubicBezierUtil",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/utils/ease-in-out-cubic.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "easeInCubicUtil",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/ease-in-out-cubic.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "easeInOutCubicUtil",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/utils/ease-in-out-cubic.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "easeOutCubicUtil",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}